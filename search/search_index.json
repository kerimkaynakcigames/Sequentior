{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Sequentior","text":"<p>To download Sequentior, please visit Asset Store.</p>"},{"location":"#video-tutorials","title":"Video Tutorials","text":"<p>For video tutorials, please visit my YouTube channel</p>"},{"location":"#what-is-sequentior","title":"What is Sequentior?","text":"<p>Sequentior is a Unity asset to create a flow of sequences for performing lots of stuff including animations.</p> <p></p> <p>Warning</p> <p>Sequentior is not a visual scripting tool! The logic is very similar to a visual scripting tool but Sequentior is built solely for creating sequences in a visual way.</p> <p>By using Sequentior, you define a logic flow to perform when something happens without writing any code. For example, you can use a Sequentior to create some visual effects when the player hit by an enemy shot. </p> <p>Why not use Animation or Timeline instead?</p> <p>Unity Animation and Timeline systems are so powerful but not simple enough to use for most of the situations. And they are not easily extensible as Sequentior. </p> <p>Creating animation assets for every animation you need makes it very hard to manage. In Sequentior, you just add a component and add as many sequentials as you need in this component.</p> <p>Although Timelines are specialized for cutscenes, of course you can do more with them. But again, it's not easily managable and it works only for the objects in scene. And when you want to make Animations or Timelines custom stuff, you need to write lots of code to achieve a simple action that a Sequentior Sequential does easily.</p> <p>The best part is that there are lots of built-in sequentials that performs most needed actions in a game. But also you can create your custom sequentials too for your own needs.</p> <p>There are two concepts you need to know to use the Sequentior in your games.</p> <ul> <li>Sequentior Manager</li> <li>Sequentials</li> </ul>"},{"location":"dynamicsequentior/","title":"Dynamic Sequentiors","text":"<p>Dynamic sequentiors are like animation prefabs and can be defined once and used in multiple game objects. So if you change the sequentials in the prefab sequentior, all the animations will change accordingly for each of the game objects it assigned to.</p> <p>How to create?</p> <p>Because dynamic sequentior are just prefabs, just drag and drop a gameobject that has Sequentior Manager component attached to the Project View.</p> <p>To instantiate a dynamic sequentior from your game logic, you need to add Sequentior Instantiator component to the game object that will responsible for instantiating.</p> <p></p> Instantiate from MonoBehaviour script<pre><code>    // to instantiate the sequentior, call the InstantiateSequentior() method\n    dynamicSeqManager.InstantiateSequentior(this);\n</code></pre>"},{"location":"dynamicsequentior/#sequentior-prefab","title":"Sequentior Prefab","text":"<p>This is the prefab that will be instantiated which has Sequentior Manager component attached.</p>"},{"location":"dynamicsequentior/#sequentior-id","title":"Sequentior Id","text":"<p>This will assign the Id to the instantiated Sequentior Manager.</p> <p>For some cases, especially when Auto Instantiate is checked, you might need to assign the instantiated sequentior to the field of the MonoBehaviour instance that has the Sequentior Instantiator component. For those kind of cases, Sequentior Id is important.</p>"},{"location":"dynamicsequentior/#variables","title":"Variables","text":"<p>You can override the variables in the Dynamic Sequentior prefab. It replaces the instantiated sequentior manager's variables list with this one if there is at least one variable in this list.</p>"},{"location":"dynamicsequentior/#field-name-is-id","title":"Field Name is Id","text":"<p>If this is enabled, it searches for a field named exactly the same with Sequentior Id in the MonoBehaviour class that has the Sequentior Instantiator component. If it finds, it will assign the instantiated object to this field.</p> <p>To this work, you need to add DynamicSequentior attribute to the field name: <pre><code>[DynamicSequentior()]\npublic SequentiorManager OpenSeq;\n</code></pre></p> <p>If \"Field Name is Id\" is not enabled but still you want to assign to a field, you can explicitly set the field name like that:</p> <pre><code>// replace DynamicSeqId with the Sequentior Id of Sequentior Instantiator component\n[DynamicSequentior(\"DynamicSeqId\")]\npublic SequentiorManager OpenSeq;\n</code></pre>"},{"location":"dynamicsequentior/#auto-instantiate","title":"Auto Instantiate","text":"<p>If checked, you don't need to call the InstantiateSequentior() method manually. It will auto instantiate the prefab on Start().</p>"},{"location":"endvaluetypecalculation/","title":"How end value of a property is calculated?","text":"<p>Values of almost all properties of (especially animation) sequentials are calculated by some inputs. Here you'll find how it works.</p>"},{"location":"endvaluetypecalculation/#end-value-type","title":"End Value Type","text":"<p>This option determines the calculation of the end value of the related property.</p>"},{"location":"endvaluetypecalculation/#initial-to-value","title":"Initial to Value","text":"<p>This changes the related property from its initial value (the value before this sequential starts) to the Value.</p>"},{"location":"endvaluetypecalculation/#from-value-to-initial","title":"From Value to Initial","text":"<p>This sets the property value to the Value and then changes it to its initial value again.</p>"},{"location":"endvaluetypecalculation/#initial-plus-value","title":"Initial Plus Value","text":"<p>This adds Value to the initial property value and changes it to the calculated value.</p>"},{"location":"endvaluetypecalculation/#initial-plus-value-to-initial","title":"Initial Plus Value to Initial","text":"<p>This adds Value to the initial property value and then changes it to its initial value again.</p> <p>This is useful for adding an initial offset to a property.  e.g. if you want to move a UI element from -100 units left from its initial position to its initial position again, select this option and just set X parameter of MoveValue property to -100 and leave Y and Z 0 because we don't want to move in these axis.</p>"},{"location":"endvaluetypecalculation/#initial-multiply-value","title":"Initial Multiply Value","text":"<p>This multiplies the related property's initial value with the  Value and changes the to the calculated value.</p> <p>For Vector properties, it will multiply each component (xx, yy, z*z) and then creates a new Vector from this calculated value. </p>"},{"location":"endvaluetypecalculation/#from-a-to-b","title":"From A to B","text":"<p>This lets you define the starting value and end value of the animation independent from the initial value of the property.</p>"},{"location":"endvaluetypecalculation/#value","title":"Value","text":"<p>This is the value that determines the end property value in accordance with the End Value Type option as explained above.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"endvaluetypecalculation/#from-value","title":"From Value","text":"<p>This is only available when the End Value Type is From A to B.</p> <p>This is the starting property value of the animation.</p>"},{"location":"sampleproject/","title":"Sample Projects","text":""},{"location":"sequentiorevent/","title":"Sequentior Event","text":"<p>Sequentior Event is simple yet powerful mechanism that lets multiple game objects listen to some events in your scripts without any dependency.</p> <p>For example, when a player character hit by enemy, you might need to tell the UI Manager to update its health progress bar. But this makes the player character dependent to UI manager. Instead, you can create a Sequentior Event asset for player hit and let UI Manager listens to this event and player character triggers this event when needed. This way, there will be no dependency between these objects. Moreover, multiple game objects might listen to the same event and performs their own logic when the event triggers.</p> <p>Sequentior Events are different from traditional Unity Events. These are ScriptableObjects that can be created and saved as assets and can be used throughout the whole project.</p> <p>To create a new Sequentior Event, just right click on your Project window and select Create-&gt;Sequentior-&gt;Sequentior Event. The only thing you need to do is to choose a name for your event and that's it.</p> <p>Here's an example to trigger this event from your code:</p> <pre><code>        // The SequentiorEvent asset reference to trigger\n        public SequentiorEvent PlayerDiedEvent;\n\n        void playerDied()\n        {\n         // ... player die logic ...\n         // and then trigger the event without caring about who listens to this event\n         PlayerDiedEvent?.Trigger();\n        }\n</code></pre>"},{"location":"sequentiorevent/#sequentior-event-listener","title":"Sequentior Event Listener","text":"<p>The game objects that listens to a Sequentior Event need to have Sequentior Event Listener component attached.</p>"},{"location":"sequentiorevent/#event-to-listen","title":"Event To Listen","text":"<p>This is the Sequentior Event asset to listen to.</p>"},{"location":"sequentiorevent/#on-trigger","title":"On Trigger()","text":"<p>When the Event To Listen event is triggered, the methods you add here will be called.</p>"},{"location":"setup/","title":"Setup Additional Features","text":"<p>Some features of Sequentior needs some specific packages are imported to your project. After you import a specific package, you can setup its related functions by opening Tools -&gt; KerimKaynakci Games -&gt; Sequentior Setup from the main menu of Unity Editor.</p> <p></p> <p>Warning</p> <p>You need to setup again if you switch the target platform of your project!</p>"},{"location":"setup/#textmeshpro","title":"TextMeshPro","text":"<p>Although TextMeshPro UPM package is already included in a project, TextMesh Pro TMP package needs to be installed manually. So Sequentior cannot assume it's included in your project. So you need to tell Sequentior that you've the TextMeshPro package in your project.</p> <p>To make this happen, click the \"TextMeshPro Setup\" button in this Setup window.</p> <p>Note</p> <p>This setup procedure will simply add \"SEQUENTIOR_TMP\" to the Scripting Define Symbols of your project. And in the sequential scripts, TextMeshPro related codes are defined in the scope of this symbol.</p>"},{"location":"setup/#post-processing-for-urp","title":"Post Processing for URP","text":"<p>Normally, when you create a URP project from Unity templates, the packages for post processing effects are included by default. But for some reason it might be removed (manually). Also, you need to tell Sequentior that you're using URP specifically. </p> <p>To make this happen, click the \"Post Processing for URP Setup\" button in this Setup window.</p> <p>Note</p> <p>This setup procedure will simply add \"SEQUENTIOR_POSTPROCESSING_URP\" to the Scripting Define Sybmols of your project. And in the sequential scripts, URP Post Processing related codes are defined in the scope of this symbol.</p>"},{"location":"setup/#post-processing-for-built-in-render-pipeline","title":"Post Processing for Built-in Render Pipeline","text":"<p>Built-in RP projects don't have a post processing library included by default. So you need to import Post Processing (Stack) library from package manager manually and then you need to tell Sequentior that you've imported this post processing package. </p> <p>To make this happen, click the \"Post Processing for Built-in RP Setup\" button in this Setup window.</p> <p>Note</p> <p>This setup procedure will simply add \"SEQUENTIOR_POSTPROCESSING_BUILTIN\" to the Scripting Define Sybmols of your project. And in the sequential scripts, Built-in RP Post Processing related codes are defined in the scope of this symbol.</p>"},{"location":"valueassign/","title":"Assigning Values","text":"<p>Most of the time we assign values to the sequentials by entering the value directly. For example to delay a sequential play action, we set a constant float value like 0.5. </p> <p>But, for advanced scenarios we need more because some values might depend on another value in our game, or it depends on another transform's some value. To handle these situtations, there are multiple options for assigning values to most of the fields in sequentials. And this depends on the field property. For example if the value is a float value, you can assign it directly or from a variable, but if it's a Vector3 value, you can assign it directly or from the position of another transform.</p> <p>Now, let's see each value assign options.</p> <p>Note</p> <p>Whenever you see a down arrow  icon next to a property, that means this field has some another value assign options to choose from. But please note that not all the options are available for all fields of sequentials.</p>"},{"location":"valueassign/#direct-assignment","title":"Direct Assignment","text":"<p>In this option, you directly enter a value. </p> <p>For example, you can enter a floating point number for a float type field or you can enter X,Y and Z values for a Vector3 type field. </p> <p></p>"},{"location":"valueassign/#random","title":"Random","text":"<p>In this option, you can specify a range of values and a random value will be choosen in this range.</p> <p>For example, you can enter Min and Max values of the range for a float type field and when the sequential performs its related action, it will evaluate the random function within this range and selects a random number.</p> <p></p>"},{"location":"valueassign/#variable","title":"Variable","text":"<p>In this option, you can enter a variable name instead of the value itself and sequential will get the exact value from the variables list of the parent Sequentior Manager.</p> <p>This is useful for assigning values that can be defined or modified at runtime.</p> <p></p> <p>Info</p> <p>See Variables for more information about variables.</p>"},{"location":"valueassign/#global-variable","title":"Global Variable","text":"<p>In this option, you can select a global variable scriptable object and sequential will get the exact value from this scriptable object.</p> <p>This is useful for assigning global (project scope) values. For example, you can create a global variable for duration of a popup open animation and use this global variable for every sequential that needs that duration value. Then when you modify the value of this global variable, all the sequentials will get the same new value without changing anything in those sequentials.</p> <p>Info</p> <p>See Global Variables for more information about Global Variables.</p>"},{"location":"valueassign/#another-transform","title":"Another Transform","text":"<p>In this option, you can select another transform and sequential will try to get the related property of the transform in the context of this specific field. This will let you assign dynamic values to properties of sequentials.</p> <p>For example, you can assign to another transform to the MoveValue of a Move sequential, so it will get the position of this transform as the MoveValue.</p> <p></p>"},{"location":"valueassign/#transform-array","title":"Transform Array","text":"<p>Same as the Another Transform but this is the array version.</p>"},{"location":"valueassign/#sequential","title":"Sequential","text":"<p>In this option, you can connect another sequential's Sequential output port to the appropriate input port of this sequential and it will get the value from this connected sequential's returned game object.</p> <p></p> <p></p>"},{"location":"valueassign/#predefined-values","title":"Predefined Values","text":"<p>In this option, you can select from a list of predefined values.</p> <p></p>"},{"location":"customsequentials/","title":"Custom Sequentials","text":"<p>In this section, you'll find how to create your own custom sequentials by writing custom classes.</p>"},{"location":"customsequentials/advanced/","title":"Advanced","text":"<p>Besides Sequential base class, there are some useful abstract classes that your custom sequential can derive from.</p>"},{"location":"customsequentials/advanced/#derive-from-sequential_objecttargeter","title":"Derive from Sequential_ObjectTargeter","text":"<p>Sequential_ObjectTargeter is the base class for sequentials that needs a gameobject to perform actions on.</p> <p>Tip</p> <p>Most of the built-in sequentials derive from this class</p>"},{"location":"customsequentials/basics/","title":"Basics","text":"<p>Important</p> <p>Every sequential should derive from Sequential class or one of its descendant classes.</p> <p>SequentiorManager class is the main manager that manages the flow of sequentials and is responsible for playing its sequentials. </p> Start Sequentials<pre><code>    sequentialManager.StartAllSequentials();\n</code></pre> <p>Typically, it loops over all the sequentials and calls the sequentials' DoSequentialAction() method which is a virtual method. So, you need to override this method in your custom sequential class and write the code that performs its actions inside this method.</p> <p>For example; a simple Log sequential can be defined as below:</p> Log Sequential (partial)<pre><code>    /* The first imporant thing is to derive your sequential from Sequential class (or one of its derived classes)\n    */\n    public class Sequential_Log : Sequential\n    {\n        // this is a property of the sequential item\n        public string Log;\n\n        /* we need to override the DoSequentialAction method because\n           this is where all the logic of the sequential is defined.\n           SequentialManager will call this method for every sequential. \n        */\n        public override void DoSequentialAction()\n        {\n            // This is the actual action this sequential performs (logging):\n            Debug.Log(Log);\n\n            /* Calling the base class's DoSequentialAction is important\n               because it raises the complete event of the sequential.\n               Otherwise SequentiorManager can't know if the sequential completed its action or not and this might cause problems.\n            */\n            base.DoSequentialAction();\n        }\n\n    }\n</code></pre> <p>Now, we've defined the custom sequential class. But to make this sequential usable in Sequentior Graph Editor, we need to add the SequentialNode Attribute to this custom class.</p> SequentialNode Attribute<pre><code> [SequentialNode(Group = \"My Sequentials\",\n                    Title = \"My Log\",\n                    InputPortCount = 1,\n                    DisplayOrder = 10001,\n                    MinWidth = 300)]\npublic class Sequential_Log : Sequential\n{\n    //...\n}\n</code></pre> <p>Now, you can see this sequential in the Sequentior Graph Editor.</p>"},{"location":"customsequentials/attributes/","title":"Attributes","text":"<p>There are lots of custom attributes defined in Sequentior package that can be used for custom sequentials or property fields.</p> <p>In this section you can learn each of these attributes.</p>"},{"location":"customsequentials/attributes/sequentialnode/","title":"SequentialNode Attribute","text":"<p>This attribute is used to decorate Sequential classes and it basically defines how to display the node of a sequential in the Sequentior Graph Editor.</p> Sample SequentialNode Attribute<pre><code> [SequentialNode(Group = \"Animations\",\n                    Title = \"Change Color\",\n                    USSClassName = \"animationnode\",\n                    InputNodeCount = 1,\n                    DisplayOrder = 111)]\npublic class Sequential_ColorChangeFast : Sequential_Animation\n{\n}\n</code></pre> <p>Here are the parameteres that can be used for this attribute:</p>"},{"location":"customsequentials/attributes/sequentialnode/#title","title":"Title","text":"<p>Title will be displayed in both Sequential List Window and also on the Sequential Node itself.</p> <p> </p>"},{"location":"customsequentials/attributes/sequentialnode/#group","title":"Group","text":"<p>When creating sequentials in Sequentior Graph Editor, a list of sequentials will be displayed as grouped and Group parameter defines which group this sequential belongs to. You can use a built-in group name or can define your own custom group name.</p> <p></p>"},{"location":"customsequentials/attributes/sequentialnode/#displayorder","title":"DisplayOrder","text":"<p>This defines the displaying order of the sequential in the list explained above.</p> <p>Warning</p> <p>Please do use a DisplayOrder greater than 9999. Because the numbers smaller than 9999 might be used for built-in sequentials.</p>"},{"location":"customsequentials/attributes/sequentialnode/#ussclassname","title":"USSClassName","text":"<p>When creating sequential nodes in Sequentior Graph Editor style classes in a style sheet is used to define the look of a node. </p> <p>So in this parameter, you can enter the style class name that's defined in the SequentiorEditorStyle.uss file located in EditorWindows folder in Sequentior package.</p>"},{"location":"customsequentials/attributes/sequentialnode/#dontdisplayinlist","title":"DontDisplayInList","text":"<p>This is used for obsolute or abstract sequential types that hides the sequential from Sequential List Window in the Sequentior Graph Editor.</p>"},{"location":"customsequentials/attributes/sequentialnode/#description","title":"Description","text":"<p>This is the description that will be displayed when the Question Mark button clicked on the sequential node.</p>"},{"location":"customsequentials/attributes/sequentialnode/#minwidth","title":"MinWidth","text":"<p>Minimum width of the sequential node.</p> <p>Tip</p> <p>Some properties of sequential might be wide than usual (for example when the property title is too long) and this prevents the user from seeing some parts of the properties. If that's the case for your custom sequential node, you can set a large value to this parameter and the sequential node will be wider.</p>"},{"location":"customsequentials/attributes/sequentialnode/#maxwidth","title":"MaxWidth","text":"<p>Maximum width of the sequential node.</p>"},{"location":"customsequentials/attributes/sequentialnode/#minheight","title":"MinHeight","text":"<p>Minimum height of the sequential node.</p>"},{"location":"customsequentials/attributes/sequentialnode/#resizable","title":"Resizable","text":"<p>If true, you can resize the sequential node on the Sequentior Graph Editor.</p>"},{"location":"customsequentials/attributes/sequentialnode/#inputportcount","title":"InputPortCount","text":"<p>Input ports are the ports that let the sequential accept other sequential's output values.</p> <p>All the sequentials have the IN input port because NEXT output port of another sequential connects to the IN input port to create a flow. Because this is the default input port, this does not count to InputPortCount parameter.</p> <p>All the other input ports are extra input ports and should be added to the InputPortCount parameter.</p> <p></p> <p>For example, Move Sequential has 4 input ports including the IN. We don't count IN as extra, so InputPortCount parameter should be 3.</p>"},{"location":"customsequentials/attributes/sequentialnode/#dontdrawproperties","title":"DontDrawProperties","text":"<p>If true, only the input and output ports will be displayed. Properties won't be displayed.</p> <p>Start Sequential uses this property to hide properties derived from Sequential Base class.</p>"},{"location":"customsequentials/attributes/sequentialnode/#dontdrawinputport","title":"DontDrawInputPort","text":"<p>If true, input ports won't be displayed.</p>"},{"location":"customsequentials/attributes/sequentialnode/#dontdrawoutputport","title":"DontDrawOutputPort","text":"<p>If true, output ports won't be displayed.</p>"},{"location":"examples/","title":"Examples","text":""},{"location":"sampleprojects/","title":"Sample Projects","text":"<p>There are a few sample projects in the Sequentior package. You can import them in your project and see the techniques on how to use Sequentior in real life projects.</p>"},{"location":"sampleprojects/simplegame/","title":"Simple Game","text":"<p>In this simple game, you can learn how to make a boring game more enjoyable by adding animations via Sequentiors.</p> <p>Here, we'll go through some of the sequentiors runs in this game.</p> <p>You'll find a GAME MANAGER object in this scene which manages the game logic. There are 2 sequentiors inside this game object: StartingSeq and GameOverSeq.</p>"},{"location":"sampleprojects/simplegame/#starting-sequentior","title":"Starting Sequentior","text":"<p>This is the sequentior that will play when the game manager starts the game.</p> <p>In this sequentior, we want to show the starting UI elements (CanvasWorld &gt; Starting and CanvasWorld &gt; ScreenDim) we simply enable the elements that are already in the scene.</p>"},{"location":"sampleprojects/simplegame/#starting-ui-element-animation-sequentior","title":"Starting UI Element Animation Sequentior","text":"<p>When we enable the Starting UI element, the sequentior in the Animation gameobject will be played automatically because we set the Auto Start enabled and set the Auto Start Option to On Enable.</p> <p></p> <p>In this Animation sequentior:</p> <ul> <li>Play Audio: This simply plays a sound clip.</li> <li>Move UI: This moves the Starting UI element from the left side of the screen (with an offset of -2000) and moves it to the center of the screen.</li> <li>Pause: After showing the Starting UI element we pause the animation for a fixed duration to let the player see it. This sequential holds the next sequentials for its duration.</li> <li>Move UI: This moves the Starting UI element from its current (initial) position to the 2000 x pos which moves it off the screen by right side.</li> <li>Play Audio: We play a sound clip while it's moving to the right side.</li> </ul> <p></p>"},{"location":"sampleprojects/simplegame/#player-and-opponent-sequentiors","title":"Player and Opponent Sequentiors","text":"<p>Player gameobject has a few sequentiors that plays when a specific event happens in the Simple01PlayerShip component. Same mechanism works for the opponent game object too. </p> <p>For example when the player ship jumps it will starts the related sequentior:</p> <pre><code>protected void OnJump()\n{\n    if (Sequentior_Jump != null)\n        Sequentior_Jump.StartAllSequentials();\n}\n</code></pre> <p>You can look at the sequentiors of Player and Opponent game objects to see how the animations and effects are designed.</p> <p></p>"},{"location":"sampleprojects/uiadvanced/","title":"UI Demo Advanced","text":"<p>This sample scene demonstrates some common UI stuff that can be done with some advanced usage of Sequentior.</p> <p>Child game objects of SEQUENTIALS game object in the scene have Sequentior Manager components which you can examine and learn how they work.</p>"},{"location":"sampleprojects/uiadvanced/#starting-sequentior","title":"Starting Sequentior","text":"<p>This sequentior will play automatically on start.</p> <p>It basically plays other sequentiors one by one with some delays.</p>"},{"location":"sampleprojects/uiadvanced/#dynamic-dialog-sequentior","title":"Dynamic Dialog Sequentior","text":"<p>This is a little bit complicated but it demonstrates a powerful mechanism to integrate sequentials with custom code.</p> <p>In this sequentior, we want to reveal dialog texts with animation. This can be done simply by adding a Reveal Text Sequential and setting the text to reveal. But in this project we're getting the texts of the dialogs dynamically at runtime. So we need a Variable to be defined in the Sequentior Manager.</p> <p></p> <p>Here we've added a variable named DialogText with String data type. And we set the Text option of the Reveal Text Sequential to variable and assign it DialogText by using Value Assign Options. </p> <p>Now, what we need to do is to assign values to this DialogText variable from our custom script.</p> <pre><code> /// &lt;summary&gt;\n/// This will be called from Reveal Text Sequentials\n/// &lt;/summary&gt;\npublic void ConsumeDialogText()\n{\n    // SeqDialog sequentior should have a string variable named DialogText\n    var dialogTextVar = SeqDialog.GetVariable(\"DialogText\");\n    if (dialogTextVar != null &amp;&amp; currentDialogTextIndex &lt; DialogTexts.Length)\n    {\n        // set the sequentior variable to the current dialog text\n        // look at the SeqDialog to see some sequentials (e.g. Reveal Text) using this variable to get the values\n        dialogTextVar.StringValue = DialogTexts[currentDialogTextIndex];\n        // and get the next one ready\n        currentDialogTextIndex++;\n    }\n\n}\n</code></pre> <p>As you see, in ConsumeDialogText() method, we get the current dialog text from the DialogTexts property of UIDemoAdvancedManager script of UI Demo Manager game object in the scene. And we call the ConsumeDialogText() method from our Sequentior by Unity Event Trigger Sequential. When this sequential plays as the first sequential inside the Loop Sequential.</p> <p></p>"},{"location":"sampleprojects/uiadvanced/#dynamic-sequentior","title":"Dynamic Sequentior","text":"<p>In this project, we use Dynamic Sequentiors for displaying popups because every popup uses the same animations for show and hide mechanisms. So we define sequentior prefabs for each animations (UIDemoAdvanced &gt; Prefabs &gt; Sequential Prefabs) and play these sequentiors for any popup. </p> <p>To instantiate one of these sequentior prefabs, we've defined a method in UIDemoAdvancedManager class:</p> <pre><code>/// &lt;summary&gt;\n/// Instantiates a sequentior from a prefab\n/// &lt;/summary&gt;\n/// &lt;param name=\"seqPrefab\"&gt;&lt;/param&gt;\n/// &lt;returns&gt;&lt;/returns&gt;\npublic SequentiorManager InstantiateSequentior(SequentiorManager seqPrefab)\n{\n    var seqInstantiator = GetComponent&lt;SequentiorInstantiator&gt;();\n    seqInstantiator.SequentiorPrefab = seqPrefab;\n    return seqInstantiator.InstantiateSequentior(this);\n\n}\n</code></pre> <p>For example, below is the sequential used for closing a popup game object:</p> <p></p> <p>As you see, we set the Get Target Object By parameter to Variable and set the Target Object Variable to Popup. So whenever we need to close a popup we need to set this Popup variable to the popup we want to close.</p> <pre><code>/// &lt;summary&gt;\n/// Closes a popup by instantiating a Sequentior Manager prefab\n/// &lt;/summary&gt;\n/// &lt;param name=\"popup\"&gt;&lt;/param&gt;\npublic void ClosePopup(GameObject popup)\n{\n    // instantiate the close popup sequentior and hold it in a var\n    var seqPopup = InstantiateSequentior(SeqClosePopupPrefab);\n\n    // set the Popup gameobject variable to the popup because this sequentior gets the Target Object from a variable named Popup.\n    // see the sequentior manager in Prefabs/Sequential Prefabs\n    seqPopup.GetVariable(\"Popup\").VariableObj = popup;\n}\n</code></pre> <p>This is how we control the dynamic (prefab) sequentiors from our scripts.</p>"},{"location":"sampleprojects/uiadvanced/#popup-animation-global-variable","title":"Popup Animation Global Variable","text":"<p>Also, you'll see that the Duration parameter of the Scale UI Sequential in Open Popup and Close Popup sequentior prefabs above is set to a Global Variable by using Value Assign Options.</p> <p>We've created a global variable  named GlobalVar Popup Open Close Duration in UIDemoAdvanced &gt; Global Variables folder and set the Duration to this global variable.</p> <p></p> <p></p> <p>This way, we've created a way to control the duration of the open and close animations for all popups in this project. So if we think the popups opens too slow or too fast, we just need to modify the value of the global variable and that's it!</p> <p>Note</p> <p>You can learn more about global variables by clicking here.</p>"},{"location":"sampleprojects/uidemo/","title":"UI Demo","text":"<p>This sample scene demonstrates the UI animations that can be done by using misc Sequentials.</p> <p>Just expand the SEQUENTIALS gameobject in the scene and all the child game objects have their own Sequentior Manager component which you can learn how it works.</p> <p></p>"},{"location":"sequentials/","title":"All Sequentials","text":"<p>In this section, you can find all the Sequentials that can be used in Sequentior.</p>"},{"location":"sequentials/#what-is-a-sequential","title":"What is a Sequential?","text":"<p>Sequential is the base entity that performs a task in a sequence flow of a Sequentior Manager.</p>"},{"location":"sequentials/#description-of-sequentials","title":"Description of Sequentials","text":"<p>You can see the description of each sequential by clicking the question mark icon on the top left corner of nodes.</p> <p></p>"},{"location":"sequentials/sequential_base/","title":"Sequential Base Properties","text":"<p>Because every sequential derives from the base Sequential class, every sequential has those properties.</p>"},{"location":"sequentials/sequential_base/#seq-id","title":"Seq Id","text":"<p>This is the auto generated Id of this sequential. This is useful for getting a sequential from script.</p>"},{"location":"sequentials/sequential_base/#muted","title":"Muted","text":"<p>This is mostly used to temporarily disable the sequential. When enabled, this sequential is ignored and not played.</p>"},{"location":"sequentials/sequential_base/#comment","title":"Comment","text":"<p>This is used for taking personal notes about this specific sequential.</p>"},{"location":"sequentials/sequential_base/#delay","title":"Delay","text":"<p>To delay the playing of the sequential, set a value in this field.</p> <p>This does not delay the next sequentials, delays only this sequential.</p> <p>For example, if you specify 1 for this sequential, this will wait 1 seconds to play but the next sequential will play without any wait (unless it has delay or it's a Wait sequential)</p>"},{"location":"sequentials/sequential_base/#chance","title":"Chance","text":"<p>By default every sequential in the flow will play. But for creating some randomness, you can speecify a Chance value that determines if it will play this sequential or ignore it.</p> <p>For example, if you specify 0.3 for this value, that means the chance of playing this sequential is 30%.</p>"},{"location":"sequentials/sequential_base/#events","title":"Events","text":"<p>This section lets you call scripts when an event occurs.</p>"},{"location":"sequentials/sequential_base/#action-completed","title":"Action Completed","text":"<p>The methods you've added to this list will be called when this sequential completes its actions.</p>"},{"location":"sequentials/sequential_log/","title":"Log Sequential","text":"<p>This sequential lets you write log messages to the Unity Console. </p> <p>Typically it calls the Debug.Log() method.</p>"},{"location":"sequentials/sequential_log/#log","title":"Log","text":"<p>This is the message to write.</p> <p>You can choose any value assigning option and it will write the appropriate message depending on the value assign type.</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/sequential_start/","title":"Start Sequential","text":"<p>Start Sequential is the entry point of a Sequentior Graph. Every graph needs to have one Start Sequential.</p> <p>When you open the Sequentior Graph Editor for the first time, Start Sequential will be added automatically for you. But you can add it manually too if you've removed it.</p>"},{"location":"sequentials/setup/","title":"Setup","text":""},{"location":"sequentials/animationsequentials/","title":"Animation Sequentials","text":"<p>Most of the sequentials that modifies a value of a game object derives from the Animation Base Sequential.</p> <p>This sequential lets you define how to animate the related values of a sequential that's derived from Animation Base Sequential.</p> <p>So every option explained here apply to other sequentials that's derived from Animation Sequential.</p> <p>Warning</p> <p>You cannot add an Animation Sequential directly. Consider it as an abstract class. Only descendant sequentials can be added to the Sequentior Manager.</p>"},{"location":"sequentials/animationsequentials/#duration","title":"Duration","text":"<p>This is the duration of the animation (in seconds.)</p> <p>You have multiple options to assign a value here. So for example, you can define a global variable for a specific animation duration (e.g. popup open animation duration) and use that global variable for the Duration property.</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/animationsequentials/#ease-type","title":"Ease Type","text":"<p>This is the easing function to calculate the value of the animation at a certain time.</p> <p>You can choose from a predefined ease functions or select the Custom option and create an animation curve for your specific needs.</p> <p></p> <p>Tip</p> <p>Try several Ease Type for your animations to create some cool effects.</p>"},{"location":"sequentials/animationsequentials/#overshoot","title":"Overshoot","text":"<p>For some Ease Types you can define an overshoot value to give the ease function's curve custom overshoot.</p> <p>For example, you can set a multiplier (overshoot) for InBack ease so it moves more at the beginning of easing.</p>"},{"location":"sequentials/animationsequentials/#repeat-options","title":"Repeat Options","text":"<p>If you want to make the animation repeat itself, you can set the paremeters in this section.</p>"},{"location":"sequentials/animationsequentials/#repeat","title":"Repeat","text":"<p>How many times to repeat the same animation.</p> <p>Tip</p> <p>Setting it to -1 repeats the animation forever.</p>"},{"location":"sequentials/animationsequentials/#repeat-type","title":"Repeat Type","text":""},{"location":"sequentials/animationsequentials/#start-over","title":"Start Over","text":"<p>This resets the values of the animation and after that plays it again.</p>"},{"location":"sequentials/animationsequentials/#ping-pong","title":"Ping Pong","text":"<p>This plays the animation forwards and then backwards and then forwards...</p>"},{"location":"sequentials/animationsequentials/#delay-between-repeats","title":"Delay Between Repeats","text":"<p>How many seconds to wait between each repeat.</p>"},{"location":"sequentials/animationsequentials/#animation-events","title":"Animation Events","text":"<p>This section has the Unity events that can be called when an action is occurred in this sequential.</p>"},{"location":"sequentials/animationsequentials/#started-event","title":"Started Event","text":"<p>When this animation sequential is started playing animation, it will call this Unity Event.</p>"},{"location":"sequentials/animationsequentials/sequential_changecolor/","title":"Change Color Sequential","text":"<p>This sequential changes the color of a game object with animation.</p> <p>Tip</p> <p>For changing the color of a gameobject that's not possible with this sequential, you can use the Change Material Color Sequential</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p>"},{"location":"sequentials/animationsequentials/sequential_changecolor/#color-change-type","title":"Color Change Type","text":"<p>This option determines the calculation of the end color.</p>"},{"location":"sequentials/animationsequentials/sequential_changecolor/#initial-to-value","title":"Initial to Value","text":"<p>This changes the color of the target transform from its initial value (the value before this sequential starts) to the Color value.</p>"},{"location":"sequentials/animationsequentials/sequential_changecolor/#from-value-to-initial","title":"From Value to Initial","text":"<p>This instantly sets the color of the target transform to the Color and then modifies it to its initial value again with animation.</p>"},{"location":"sequentials/animationsequentials/sequential_changecolor/#initial-plus-value","title":"Initial Plus Value","text":"<p>This adds Color to the target transform's initial color value and changes it to the calculated value.</p>"},{"location":"sequentials/animationsequentials/sequential_changecolor/#initial-multiply-value","title":"Initial Multiply Value","text":"<p>This multiplies each component (R,G,B,A) of the transform's initial color with the corresponding component of the Color and changes the target transform color to the calculated color value.</p>"},{"location":"sequentials/animationsequentials/sequential_changecolor/#from-a-to-b","title":"From A to B","text":"<p>This lets you define the starting color and end color of the animation independent from the initial color of the target transform.</p> <p></p>"},{"location":"sequentials/animationsequentials/sequential_changecolor/#color","title":"Color","text":"<p>This is the Color value that determines the end color in accordance with the Color Change Type option as explained above.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/animationsequentials/sequential_changecolor/#from-color","title":"From Color","text":"<p>This is only available when the Color Change Type is From A to B.</p> <p>This is the starting color value of the animation.</p>"},{"location":"sequentials/animationsequentials/sequential_changecolor/#component-type","title":"Component Type","text":"<p>Because not all game objects have Color property, this sequential needs some specific types of target objects to work properly.</p> <p>So, the target object needs to be one of the types below and you need to choose the correct type for this property:</p>"},{"location":"sequentials/animationsequentials/sequential_changecolor/#ui_image","title":"UI_Image","text":"<p>This is the UI Image component.</p> <p>That means, it expects the target object to be UI Image component.</p>"},{"location":"sequentials/animationsequentials/sequential_changecolor/#sprite-renderer","title":"Sprite Renderer","text":"<p>This is the Sprite Renderer component.</p> <p>That means, it expects the target object to be a Sprite Renderer component.</p>"},{"location":"sequentials/animationsequentials/sequential_changecolor/#tmp_text","title":"TMP_Text","text":"<p>This is the TextMeshPro component.</p> <p>That means, it expects the target object to be TextMeshPro component.</p> <p>Warning</p> <p>To use TextMeshPro in Sequentior, you need to setup it as explained here</p>"},{"location":"sequentials/animationsequentials/sequential_floatanimator/","title":"Float Animator Sequential","text":"<p>This sequential lets you modify any float property of a component, so it's a very powerful sequential that can be used for general animation purposes for objects that expose a float property.</p> <p>For example, although there is a specific sequential to change the alpha value of CanvasGroup component, you can also change (animate) it with this sequential. So it's useful when there is no built-in sequential to animate a value.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p>"},{"location":"sequentials/animationsequentials/sequential_floatanimator/#end-value-type","title":"End Value Type","text":"<p>This option determines the calculation of the end value of the float property.</p>"},{"location":"sequentials/animationsequentials/sequential_floatanimator/#initial-to-value","title":"Initial to Value","text":"<p>This modifies the target property from its initial value (the value before this sequential starts) to the Value.</p>"},{"location":"sequentials/animationsequentials/sequential_floatanimator/#from-value-to-initial","title":"From Value to Initial","text":"<p>This sets the target property to the Value and then modifies it to its initial value again.</p>"},{"location":"sequentials/animationsequentials/sequential_floatanimator/#initial-plus-value","title":"Initial Plus Value","text":"<p>This adds Value to the target property's initial value and modifies it to the calculated end value.</p>"},{"location":"sequentials/animationsequentials/sequential_floatanimator/#initial-multiply-value","title":"Initial Multiply Value","text":"<p>This multiplies the property's initial value with the Value and modifies the target property to the calculated value.</p>"},{"location":"sequentials/animationsequentials/sequential_floatanimator/#from-a-to-b","title":"From A to B","text":"<p>This lets you define the starting value and end value of the float animation independent from the initial value of the target property.</p> <p></p>"},{"location":"sequentials/animationsequentials/sequential_floatanimator/#value","title":"Value","text":"<p>This is the float value that determines the end value in accordance with the End Value Type option as explained above.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/animationsequentials/sequential_floatanimator/#from-value","title":"From Value","text":"<p>This is only available when the End Value Type is From A to B.</p> <p>This is the starting value of the float animation.</p>"},{"location":"sequentials/animationsequentials/sequential_floatanimator/#property-options","title":"Property Options","text":"<p>In this section, you can define the target float property.</p>"},{"location":"sequentials/animationsequentials/sequential_floatanimator/#component-name","title":"Component Name","text":"<p>This is the class name with full namespace of a component that is attached to the target object and that has the property to animate.</p> <p>So, for example, to get SpriteRenderer component attached, you need to type UnityEngine.SpriteRenderer, UnityEngine.</p> <p>What's full type?</p> <ul> <li>For custom types, you can use the full class name with namespace. e.g. com.kerimkaynakcigames.MyGame.GameManager</li> <li>For built-in types, write the class name and then put a comma (,) and then assembly name. e.g. UnityEngine.SpriteRenderer, UnityEngine</li> </ul>"},{"location":"sequentials/animationsequentials/sequential_floatanimator/#property-name","title":"Property Name","text":"<p>This defines the which property to animate.</p> <p>So this is the main target property of this sequential.</p> <p>e.g. fillAmount property of an Image component.</p>"},{"location":"sequentials/animationsequentials/sequential_move/","title":"Move Sequential","text":"<p>This sequential moves a transform with animation.</p> <p>Tip</p> <p>If you want to move a rigidbody specifically, you can use Move Rigidbody instead.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p>"},{"location":"sequentials/animationsequentials/sequential_move/#move-type","title":"Move Type","text":"<p>This option determines the calculation of the end value of the move action.</p>"},{"location":"sequentials/animationsequentials/sequential_move/#initial-to-value","title":"Initial to Value","text":"<p>This moves the target transform from its initial value (the value before this sequential starts) to the Move Value.</p>"},{"location":"sequentials/animationsequentials/sequential_move/#from-value-to-initial","title":"From Value to Initial","text":"<p>This teleports the target transform to the Move Value and then moves it to its initial value again.</p>"},{"location":"sequentials/animationsequentials/sequential_move/#initial-plus-value","title":"Initial Plus Value","text":"<p>This adds Move Value to the target transform's initial value and moves it to the calculated position.</p> <p>For example, to move a transform 10 units right and 20 units up, but if you don't know the exact target position you can use this option with Move Value (10,20). </p>"},{"location":"sequentials/animationsequentials/sequential_move/#initial-multiply-value","title":"Initial Multiply Value","text":"<p>This multiplies each axis of the transform's initial position with the corresponding axis of the Move Value and moves the target transform to the calculated position.</p>"},{"location":"sequentials/animationsequentials/sequential_move/#from-a-to-b","title":"From A to B","text":"<p>This lets you define the starting position and end position of the move animation independent from the initial position of the target transform.</p> <p></p>"},{"location":"sequentials/animationsequentials/sequential_move/#move-value","title":"Move Value","text":"<p>This is the Vector3 value that determines the end position in accordance with the Move Type option as explained above.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>For example, to move the target transform to the position of another transform, you can select Another Transform or Sequential for the value assigning option and then choose the transform to go.</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p> <p>Tip</p> <p>When you assign Move Value with Sequential option, you need to connect the related sequential's Sequential output port to this sequential's To Position input port. </p>"},{"location":"sequentials/animationsequentials/sequential_move/#from-position","title":"From Position","text":"<p>This is only available when the Move Type is From A to B.</p> <p>This is the starting position of the move animation.</p> <p>Tip</p> <p>When you assign From Position with Sequential option, you need to connect the related sequential's Sequential output port to this sequential's From Position input port. </p>"},{"location":"sequentials/animationsequentials/sequential_move/#to-position","title":"To Position","text":"<p>This is only available when the Move Type is From A to B.</p> <p>This is the end position of the move animation.</p> <p>Tip</p> <p>When you assign To Position with Sequential option, you need to connect the related sequential's Sequential output port to this sequential's To Position input port. </p>"},{"location":"sequentials/animationsequentials/sequential_move/#animate-local-position","title":"Animate Local Position","text":"<p>By default, this sequential moves the target transform by modifying its transform.position property. But sometimes you might need to modify its local transform. So if you enable this option, it modifies transform.localPosition instead.</p>"},{"location":"sequentials/animationsequentials/sequential_move/#offset","title":"Offset","text":"<p>This adds an offset to the end position that's calculated by the Move Type and Move Value parameters.</p> <p>Tip</p> <p>This is especially useful when you set the Move Value to Another Transform or Sequential because you may want to move the target transform to another transform's position but with an offset.</p>"},{"location":"sequentials/animationsequentials/sequential_rotate/","title":"Rotate Sequential","text":"<p>This sequential rotates a transform with animation.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p>"},{"location":"sequentials/animationsequentials/sequential_rotate/#rotate-type","title":"Rotate Type","text":"<p>This option determines the calculation of the end value of the rotate action.</p>"},{"location":"sequentials/animationsequentials/sequential_rotate/#initial-to-value","title":"Initial to Value","text":"<p>This rotates the target transform from its initial value (the value before this sequential starts) to the Rotation.</p>"},{"location":"sequentials/animationsequentials/sequential_rotate/#from-value-to-initial","title":"From Value to Initial","text":"<p>This instantly sets the rotation of the target transform to the Rotation and then rotates it to its initial value again.</p>"},{"location":"sequentials/animationsequentials/sequential_rotate/#initial-plus-value","title":"Initial Plus Value","text":"<p>This adds Rotation to the target transform's initial rotation value and rotates it to the calculated value.</p> <p>For example, to rotate a transform 10 degrees on X axis and 20 degrees on Y axis, but if you don't know the exact target rotation you can use this option with Rotation (10, 20, 0). </p>"},{"location":"sequentials/animationsequentials/sequential_rotate/#initial-multiply-value","title":"Initial Multiply Value","text":"<p>This multiplies each axis of the transform's initial rotation with the corresponding axis of the Rotation and rotates the target transform to the calculated rotation.</p>"},{"location":"sequentials/animationsequentials/sequential_rotate/#from-a-to-b","title":"From A to B","text":"<p>This lets you define the starting rotation and end rotation of the rotate animation independent from the initial rotation of the target transform.</p> <p></p>"},{"location":"sequentials/animationsequentials/sequential_rotate/#rotation","title":"Rotation","text":"<p>This is the Vector3 value (in degrees) that determines the end rotation in accordance with the Rotate Type option as explained above.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>For example, to rotate the target transform to the rotation of another transform, you can select Another Transform or Sequential for the value assigning option and then choose the transform to match the rotation.</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p> <p>Tip</p> <p>When you assign Rotation with Sequential option, you need to connect the related sequential's Sequential output port to this sequential's To Rotation input port. </p>"},{"location":"sequentials/animationsequentials/sequential_rotate/#from-rotation","title":"From Rotation","text":"<p>This is only available when the Rotate Type is From A to B.</p> <p>This is the starting rotation of the rotate animation.</p> <p>Tip</p> <p>When you assign From Rotation with Sequential option, you need to connect the related sequential's Sequential output port to this sequential's From Rotation input port. </p>"},{"location":"sequentials/animationsequentials/sequential_rotate/#closest-path","title":"Closest Path","text":"<p>This calculates the minimum angle difference to reach to the target rotation angle and rotates the transform accordingly. </p> <p>For example, say you want to rotate a transform from 270 to 0. By default this sequential rotates the transform backwards to 0 (270, 260, 250 ... 0). But if this option is checked, it will rotate to 360 instead of 0 because this path is faster (270, 280, ... 360) and it's the same target angle.</p>"},{"location":"sequentials/animationsequentials/sequential_rotate/#animate-local-rotation","title":"Animate Local Rotation","text":"<p>By default, this sequential rotates the target transform by modifying its transform.rotation property. But sometimes you might need to modify its local rotation. So if you enable this option, it modifies transform.localRotation instead.</p>"},{"location":"sequentials/animationsequentials/sequential_rotatearound/","title":"Rotate Around Sequential","text":"<p>This sequential rotates a transform around another transform or a pivot point with animation.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p>"},{"location":"sequentials/animationsequentials/sequential_rotatearound/#axis","title":"Axis","text":"<p>This lets you define on which axis to rotate the target transform.</p> <p>For example, to rotate around X and Z set it to (1,0,1)</p>"},{"location":"sequentials/animationsequentials/sequential_rotatearound/#pivot","title":"Pivot","text":"<p>The target transform will rotate around this point.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable or select another transform to rotate around).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p> <p>Tip</p> <p>When you assign Pivot with Sequential option, you need to connect the related sequential's Sequential output port to this sequential's Pivot input port.</p>"},{"location":"sequentials/animationsequentials/sequential_rotatearound/#angle","title":"Angle","text":"<p>This is the rotation angle in degrees.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p>"},{"location":"sequentials/animationsequentials/sequential_scale/","title":"Scale Sequential","text":"<p>This sequential scales a transform with animation.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p>"},{"location":"sequentials/animationsequentials/sequential_scale/#scale-type","title":"Scale Type","text":"<p>This option determines the calculation of the end value of the scale action.</p>"},{"location":"sequentials/animationsequentials/sequential_scale/#initial-to-value","title":"Initial to Value","text":"<p>This scales the target transform from its initial value (the value before this sequential starts) to the Scale Value.</p>"},{"location":"sequentials/animationsequentials/sequential_scale/#from-value-to-initial","title":"From Value to Initial","text":"<p>This instantly sets the scale of the target transform to the Scale Value and then scales it to its initial value again.</p>"},{"location":"sequentials/animationsequentials/sequential_scale/#initial-plus-value","title":"Initial Plus Value","text":"<p>This adds Scale Value to the target transform's initial scale value and scales it to the calculated value.</p>"},{"location":"sequentials/animationsequentials/sequential_scale/#initial-multiply-value","title":"Initial Multiply Value","text":"<p>This multiplies each axis of the transform's initial scale with the corresponding axis of the Scale Value and scales the target transform to the calculated value.</p>"},{"location":"sequentials/animationsequentials/sequential_scale/#from-a-to-b","title":"From A to B","text":"<p>This lets you define the starting scale and end scale of the scale animation independent from the initial scale of the target transform.</p> <p></p>"},{"location":"sequentials/animationsequentials/sequential_scale/#scale-value","title":"Scale Value","text":"<p>This is the Vector3 value that determines the end scale in accordance with the Scale Type option as explained above.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>For example, to scale the target transform to the scale of another transform, you can select Another Transform or Sequential for the value assigning option and then choose the transform to match the scale.</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p> <p>Tip</p> <p>When you assign Scale Value with Sequential option, you need to connect the related sequential's Sequential output port to this sequential's To Scale input port. </p>"},{"location":"sequentials/animationsequentials/sequential_scale/#from-scale","title":"From Scale","text":"<p>This is only available when the Scale Type is From A to B.</p> <p>This is the starting scale value of the scale animation.</p> <p>Tip</p> <p>When you assign From Scale with Sequential option, you need to connect the related sequential's Sequential output port to this sequential's From Scale input port. </p>"},{"location":"sequentials/animationsequentials/sequential_shaketransform/","title":"Shake Transform Sequential","text":"<p>This sequential shakes the transform with animation.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p>"},{"location":"sequentials/animationsequentials/sequential_shaketransform/#shake-type","title":"Shake Type","text":"<p>Each shake type has its own parameters.</p>"},{"location":"sequentials/animationsequentials/sequential_shaketransform/#simple","title":"Simple","text":"<p>This has basic parameters but it's useful for most of shake scenarios.</p>"},{"location":"sequentials/animationsequentials/sequential_shaketransform/#shake-position","title":"Shake Position","text":"<p>If enabled, it will shake by modifying the position of the transform.</p>"},{"location":"sequentials/animationsequentials/sequential_shaketransform/#position-shake-strength","title":"Position Shake Strength","text":"<p>This is the strength of position shake. You can think of this as the maximum offset of position when shaking can be this value.</p> <p>It's applied when the Shake Position is enabled.</p> <p>Tip</p> <p>For shaking UI elements, set it much higher to see the effect.</p>"},{"location":"sequentials/animationsequentials/sequential_shaketransform/#shake-rotation","title":"Shake Rotation","text":"<p>If enabled, it will shake by modifying the rotation of the transform.</p>"},{"location":"sequentials/animationsequentials/sequential_shaketransform/#angular-shake-strength","title":"Angular Shake Strength","text":"<p>This will be the maximum quaternion that transform can rotate while shaking. </p> <p>e.g. 1 means the transform quaternion will increase/decrease by 1 at max. </p> <p>Tip</p> <p>For shaking UI elements, set it much higher (about 1) to see the effect.</p>"},{"location":"sequentials/animationsequentials/sequential_shaketransform/#advanced","title":"Advanced","text":"<p>This type of shake has more control over the shake animation so you can get better results with fine tuning comparing to the Simple type.</p>"},{"location":"sequentials/animationsequentials/sequential_shaketransform/#shake-position_1","title":"Shake Position","text":"<p>If enabled, it will shake by modifying the position of the transform.</p>"},{"location":"sequentials/animationsequentials/sequential_shaketransform/#shake-rotation_1","title":"Shake Rotation","text":"<p>If enabled, it will shake by modifying the rotation of the transform.</p>"},{"location":"sequentials/animationsequentials/sequential_shaketransform/#frequency","title":"Frequency","text":"<p>How many times to shake per second.</p>"},{"location":"sequentials/animationsequentials/sequential_shaketransform/#max-position-shake","title":"Max. Position Shake","text":"<p>This will be the maximum units that transform can move while shaking. </p> <p>e.g. 1 means the transform position will move 1 unit at max. </p> <p>Tip</p> <p>For shaking UI elements, set it much higher to see the effect.</p>"},{"location":"sequentials/animationsequentials/sequential_shaketransform/#max-angular-shake","title":"Max. Angular Shake","text":"<p>This will be the maximum angles (degrees) that transform can rotate while shaking. </p> <p>e.g. 30 means the transform position will rotate 30 degrees at max.</p>"},{"location":"sequentials/animationsequentials/sequential_shaketransform/#shake-strength-exponent","title":"Shake Strength Exponent","text":"<p>Defines the falloff value.</p> <p>It calculates the next value of shake by power of this value.</p>"},{"location":"sequentials/audiosequentials/sequential_changeaudiovolume/","title":"Change Audio Volume Sequential","text":"<p>This sequential lets you change the volume level of an Audio Source component with animation.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be Audio Source type. So please make sure that the game object assigned in this field has an Audio Source component attached. Otherwise you'll see a runtime error log when this sequential plays.</p>"},{"location":"sequentials/audiosequentials/sequential_changeaudiovolume/#end-value-type","title":"End Value Type","text":"<p>This option determines the calculation of the end value of the volume.</p>"},{"location":"sequentials/audiosequentials/sequential_changeaudiovolume/#initial-to-value","title":"Initial to Value","text":"<p>This changes the volume from its initial value (the value before this sequential starts) to the Volume.</p>"},{"location":"sequentials/audiosequentials/sequential_changeaudiovolume/#from-value-to-initial","title":"From Value to Initial","text":"<p>This instantly sets the volume to the Volume property and then changes it to its initial value again.</p>"},{"location":"sequentials/audiosequentials/sequential_changeaudiovolume/#initial-plus-value","title":"Initial Plus Value","text":"<p>This adds Volume to the target audio source's initial volume and changes it to the calculated value.</p>"},{"location":"sequentials/audiosequentials/sequential_changeaudiovolume/#initial-multiply-value","title":"Initial Multiply Value","text":"<p>This multiplies audio source's initial volume with the Volume and changes the target audio source volume to the calculated value.</p>"},{"location":"sequentials/audiosequentials/sequential_changeaudiovolume/#from-a-to-b","title":"From A to B","text":"<p>This lets you define the starting volume and end volume of the animation independent from the initial volume of the target audio source.</p>"},{"location":"sequentials/audiosequentials/sequential_changeaudiovolume/#volume","title":"Volume","text":"<p>This is the Volume value that determines the end volume in accordance with the End Value Type option as explained above.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/audiosequentials/sequential_changeaudiovolume/#from-volume","title":"From Volume","text":"<p>This is only available when the End Value Type is From A to B.</p> <p>This is the starting volume value of the animation.</p>"},{"location":"sequentials/audiosequentials/sequential_playaudio/","title":"Play Audio Sequential","text":"<p>This sequential plays a single or multiple audio clip(s).</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p>"},{"location":"sequentials/audiosequentials/sequential_playaudio/#play-option","title":"Play Option","text":"<ul> <li>Single: Plays a single audio clip.</li> <li>All at once: Plays multiple audio clips at once.</li> </ul>"},{"location":"sequentials/audiosequentials/sequential_playaudio/#clip","title":"Clip","text":"<p>This is the Audio Clip to play.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/audiosequentials/sequential_playaudio/#clips","title":"Clips","text":"<p>This is the list of Audio Clips to play. Only available when the Play Option is set to All at once.</p> <p></p>"},{"location":"sequentials/audiosequentials/sequential_playaudio/#volume","title":"Volume","text":"<p>If you need to change the volume of the clip, you can set it here.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/audiosequentials/sequential_playaudio/#pitch","title":"Pitch","text":"<p>If you need to change the pitch of the clip, you can set it here.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/camerasequentials/sequential_shakecam/","title":"Shake Camera Sequential","text":"<p>This sequential works same as the Shake Transform Sequential. So please refer to this document.</p>"},{"location":"sequentials/camerasequentials/sequential_zoomcam/","title":"Zoom Camera Sequential","text":"<p>This sequential lets you zoom in/out a camera with animation.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be Camera type. So please make sure that the game object assigned in this field has a Camera component attached. Otherwise you'll see a runtime error log when this sequential plays.</p>"},{"location":"sequentials/camerasequentials/sequential_zoomcam/#get-main-camera","title":"Get Main Camera","text":"<p>If checked, the camera to zoom will be the main camera of the scene (Camera.main). </p> <p>Otherwise, the camera(s) will be gotten from the Target Object(s).</p>"},{"location":"sequentials/camerasequentials/sequential_zoomcam/#zoom-type","title":"Zoom Type","text":"<p>You can select the method of zooming.</p>"},{"location":"sequentials/camerasequentials/sequential_zoomcam/#fov","title":"FOV","text":"<p>This will zoom in/out the camera by changing its FOV value. </p> <p>If the camera projection is Perspective, you can select this option for zooming.</p>"},{"location":"sequentials/camerasequentials/sequential_zoomcam/#orthographic-size","title":"Orthographic Size","text":"<p>This will zoom in/out the camera by changing its Size value.</p> <p>If the camera projection is Orthographic, you can select this option for zooming.</p>"},{"location":"sequentials/camerasequentials/sequential_zoomcam/#depth","title":"Depth","text":"<p>This will zoom in/out the camera by changing its Z position.</p> <p>This option is more suitable for Perspective projection camera but you can use it for Orthographic camera too for some effects.</p>"},{"location":"sequentials/camerasequentials/sequential_zoomcam/#zoom-value-type","title":"Zoom Value Type","text":"<p>This option determines the calculation of the end value of the zoom action.</p>"},{"location":"sequentials/camerasequentials/sequential_zoomcam/#initial-to-value","title":"Initial to Value","text":"<p>This zooms the target camera from its initial value (the value before this sequential starts) to the Zoom Value.</p>"},{"location":"sequentials/camerasequentials/sequential_zoomcam/#from-value-to-initial","title":"From Value to Initial","text":"<p>This instantly sets the zoom of the target camera to the Zoom Value and then zooms it to its initial value again.</p>"},{"location":"sequentials/camerasequentials/sequential_zoomcam/#initial-plus-value","title":"Initial Plus Value","text":"<p>This adds Zoom Value to the target camera's initial zoom value and zoom it to the calculated value.</p>"},{"location":"sequentials/camerasequentials/sequential_zoomcam/#initial-multiply-value","title":"Initial Multiply Value","text":"<p>This multiplies camera's initial zoom value with the Zoom Value and zooms the target camera to the calculated value.</p>"},{"location":"sequentials/camerasequentials/sequential_zoomcam/#from-a-to-b","title":"From A to B","text":"<p>This lets you define the starting zoom and end zoom of the animation independent from the initial zoom of the target camera.</p>"},{"location":"sequentials/camerasequentials/sequential_zoomcam/#zoom-value","title":"Zoom Value","text":"<p>This is the value that determines the end zoom value in accordance with the Zoom Value Type option as explained above.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/camerasequentials/sequential_zoomcam/#from-zoom-value","title":"From Zoom Value","text":"<p>This is only available when the Zoom Value Type is From A to B.</p> <p>This is the starting zoom value of the zoom animation.</p>"},{"location":"sequentials/eventtriggersequentials/","title":"Event Trigger Sequentials","text":"<p>Sequentials in this category let you to trigger some event in your scripts. Those are very useful sequentials to communicate between Sequentior flow and your code.</p>"},{"location":"sequentials/eventtriggersequentials/sequential_seqeventtrigger/","title":"Sequentior Event Trigger","text":"<p>This sequential triggers a Sequentior Event</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p>"},{"location":"sequentials/eventtriggersequentials/sequential_seqeventtrigger/#event","title":"Event","text":"<p>This is the Sequentior Event asset to trigger.</p> <p>Note</p> <p>To learn more about Sequentior Events, please refer to Sequentior Events</p>"},{"location":"sequentials/eventtriggersequentials/sequential_unityeventtrigger/","title":"Unity Event Trigger","text":"<p>This sequential lets you call methods from your scripts via Unity Event mechanism.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p>"},{"location":"sequentials/eventtriggersequentials/sequential_unityeventtrigger/#event","title":"Event()","text":"<p>This is the Unity Event to trigger.</p>"},{"location":"sequentials/followersequentials/","title":"Follower Sequentials","text":"<p>By using follower sequentials, you can make an object (or multiple objects) to follow another object's property. e.g. follow position.</p> <p>This is different from another sequentials because they have no specific duration, unless stopped explicitily they runs indefinetly.</p>"},{"location":"sequentials/gameobjectsequentials/","title":"GameObject Sequentials","text":"<p>Sequentials in this category let you perform Unity Game Object related actions such as instantiating or destroying game objects.</p> <p>See each of the sequentials in this category from the main navigation menu.</p>"},{"location":"sequentials/gameobjectsequentials/sequential_destroygameobject/","title":"Destroy Object Sequential","text":"<p>This sequential destroys a Unity game object (Target Object) with or without delay.</p> <p>So the fundamental properties are Target Object and Delay.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p>"},{"location":"sequentials/gameobjectsequentials/sequential_enabledisableobject/","title":"Enable/Disable Object Sequential","text":"<p>This sequential enables or disables a Unity game object (Target Object) with or without delay.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p>"},{"location":"sequentials/gameobjectsequentials/sequential_enabledisableobject/#enable","title":"Enable","text":"<p>If this is checked, it will enable the game object.</p> <p>If not checked, it will disable the game object.</p>"},{"location":"sequentials/gameobjectsequentials/sequential_findmultipleobj/","title":"Find Multiple Objects Sequential","text":"<p>This sequential lets you find multiple game objects and exposes it to its Sequential output port as GameObject[].</p>"},{"location":"sequentials/gameobjectsequentials/sequential_findmultipleobj/#find-by-options","title":"Find By Options","text":""},{"location":"sequentials/gameobjectsequentials/sequential_findmultipleobj/#by-name","title":"By Name","text":""},{"location":"sequentials/gameobjectsequentials/sequential_findmultipleobj/#objects-name","title":"Objects Name","text":"<p>This is the name of the game objects to find from the scene. </p>"},{"location":"sequentials/gameobjectsequentials/sequential_findmultipleobj/#find-only-in-children","title":"Find Only In Children","text":"<p>If this is enabled, it tries to find the objects from child game objects of the game object that this sequential is attached to.</p>"},{"location":"sequentials/gameobjectsequentials/sequential_findmultipleobj/#find-in-children-of-this","title":"Find In Children Of This","text":"<p>This is only available when Find Only In Children is enabled.</p> <p>If nothing is assigned to this field, it tries to find in children of the game object this sequential is attached to.</p> <p>If you assign another game object here, it will try to find in children of that assigned game object.</p>"},{"location":"sequentials/gameobjectsequentials/sequential_findmultipleobj/#by-tag","title":"By Tag","text":"<p>This lets you find multiple game objects by their tag.</p>"},{"location":"sequentials/gameobjectsequentials/sequential_findmultipleobj/#obj-tag","title":"Obj Tag","text":"<p>This is the tag of the game object to find from the scene. The first game object with this tag will be returned.</p>"},{"location":"sequentials/gameobjectsequentials/sequential_findmultipleobj/#by-type","title":"By Type","text":"<p>This lets you find multiple game objects by their class type.</p>"},{"location":"sequentials/gameobjectsequentials/sequential_findmultipleobj/#objects-type","title":"Objects Type","text":"<p>This is the class name with full namespace of a component that is attached to the objects to find.</p> <p>So, for example, to find a game object with SpriteRenderer component attached, you need to type UnityEngine.SpriteRenderer, UnityEngine.</p> <p>What's full type?</p> <ul> <li>For custom types, you can use the full class name with namespace. e.g. com.kerimkaynakcigames.MyGame.GameManager</li> <li>For built-in types, write the class name and then put a comma (,) and then assembly name. e.g. UnityEngine.SpriteRenderer, UnityEngine</li> </ul>"},{"location":"sequentials/gameobjectsequentials/sequential_findmultipleobj/#find-only-in-children_1","title":"Find Only In Children","text":"<p>See Find Only In Children</p>"},{"location":"sequentials/gameobjectsequentials/sequential_findmultipleobj/#find-in-children-of-this_1","title":"Find In Children Of This","text":"<p>See Find In Children Of This</p>"},{"location":"sequentials/gameobjectsequentials/sequential_findmultipleobj/#find-inactive-objects-too","title":"Find Inactive Objects Too","text":"<p>By default, only the first active object is returned as the target object. But to search in inactive objects too, enable this option.</p>"},{"location":"sequentials/gameobjectsequentials/sequential_findmultipleobj/#by-object-group","title":"By Object Group","text":"<p>This lets you find game objects which have Sequentior Object Group component and have the same Group Name.</p> <p>This is similar to finding by Tag but has more options and because Tags are used for other purposes in game development, you may not want to add and assign tags just for getting objects in Sequentior. So this is an alternative way for grouping objects to find them in sequentials.</p>"},{"location":"sequentials/gameobjectsequentials/sequential_findmultipleobj/#objects-group","title":"Objects Group","text":"<p>For example, to perform actions on all (or some of) the Buttons in your scene, you can add Sequentior Object Group component to these buttons and give them a Group Name (say \"Buttons\"). Then in sequentials, you can get all of those buttons by entering the same group name to the Objects Group field.</p>"},{"location":"sequentials/gameobjectsequentials/sequential_findmultipleobj/#sequentior-object-group-component","title":"Sequentior Object Group Component","text":""},{"location":"sequentials/gameobjectsequentials/sequential_findmultipleobj/#group","title":"Group","text":"<p>This is the name of the group this game object belongs to.</p> <p>To find this object in sequentials, Objects Group should match this value.</p>"},{"location":"sequentials/gameobjectsequentials/sequential_findmultipleobj/#order","title":"Order","text":"<p>When multiple game objects are found in the same group, the sequential performs its related actions for each of those game objects one by one. But the order of the found objects are not deterministic, so you can't be sure about that sequential will perform the action on which game object first. To define a specific order, you can enter values to this field for each game objects that belongs the same group.</p> <p>The game object that has the minimum Order value will be the first game object in the list.</p>"},{"location":"sequentials/gameobjectsequentials/sequential_findsingleobj/","title":"Find a Single Object Sequential","text":"<p>This sequential lets you find a game object and exposes it to its Sequential output port.</p>"},{"location":"sequentials/gameobjectsequentials/sequential_findsingleobj/#find-by-options","title":"Find By Options","text":""},{"location":"sequentials/gameobjectsequentials/sequential_findsingleobj/#by-name","title":"By Name","text":""},{"location":"sequentials/gameobjectsequentials/sequential_findsingleobj/#obj-name","title":"Obj Name","text":"<p>This is the name of the game object to find from the scene. The first game object with this name will be returned.</p>"},{"location":"sequentials/gameobjectsequentials/sequential_findsingleobj/#find-only-in-children","title":"Find Only In Children","text":"<p>If this is enabled, it tries to find the object from child game objects of the game object that this sequential is attached to.</p>"},{"location":"sequentials/gameobjectsequentials/sequential_findsingleobj/#find-in-children-of-this","title":"Find In Children Of This","text":"<p>This is only available when Find Only In Children is enabled.</p> <p>If nothing is assigned to this field, it tries to find in children of the game object this sequential is attached to.</p> <p>If you assign another game object here, it will try to find in children of that assigned game object.</p>"},{"location":"sequentials/gameobjectsequentials/sequential_findsingleobj/#by-tag","title":"By Tag","text":"<p>This lets you find a single  game object by its tag.</p>"},{"location":"sequentials/gameobjectsequentials/sequential_findsingleobj/#obj-tag","title":"Obj Tag","text":"<p>This is the tag of the game object to find from the scene. The first game object with this tag will be returned.</p>"},{"location":"sequentials/gameobjectsequentials/sequential_findsingleobj/#by-type","title":"By Type","text":"<p>This lets you find a single game object by its class type.</p>"},{"location":"sequentials/gameobjectsequentials/sequential_findsingleobj/#obj-type","title":"Obj Type","text":"<p>This is the class name with full namespace of a component that is attached to the object to find.</p> <p>So, for example, to find a game object with SpriteRenderer component attached, you need to type UnityEngine.SpriteRenderer, UnityEngine.</p> <p>What's full type?</p> <ul> <li>For custom types, you can use the full class name with namespace. e.g. com.kerimkaynakcigames.MyGame.GameManager</li> <li>For built-in types, write the class name and then put a comma (,) and then assembly name. e.g. UnityEngine.SpriteRenderer, UnityEngine</li> </ul>"},{"location":"sequentials/gameobjectsequentials/sequential_findsingleobj/#find-only-in-children_1","title":"Find Only In Children","text":"<p>See Find Only In Children</p>"},{"location":"sequentials/gameobjectsequentials/sequential_findsingleobj/#find-in-children-of-this_1","title":"Find In Children Of This","text":"<p>See Find In Children Of This</p>"},{"location":"sequentials/gameobjectsequentials/sequential_findsingleobj/#find-inactive-objects-too","title":"Find Inactive Objects Too","text":"<p>By default, only the first active object is returned as the target object. But to search in inactive objects too, enable this option.</p>"},{"location":"sequentials/gameobjectsequentials/sequential_instantiate/","title":"Instantiate Sequential","text":"<p>This sequential instantiate a Unity game object from a prefab.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p>"},{"location":"sequentials/gameobjectsequentials/sequential_instantiate/#prefab-to-instantiate","title":"Prefab to Instantiate","text":"<p>This is the prefab to instantiate.</p> <p>You can select the prefab directly, or you can select a random prefab from a list of prefabs, or you can get the prefab from a variable or global variable.</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/gameobjectsequentials/sequential_instantiate/#object-count","title":"Object Count","text":"<p>This defines how many objects to instantiate from the prefab. </p> <p>Note</p> <p>If you assign a value greater than 1, the Sequential output port exposes an array of game objects instead of a single game object.</p>"},{"location":"sequentials/gameobjectsequentials/sequential_instantiate/#delay-between-each-object","title":"Delay Between Each Object","text":"<p>If the Object Count is greater than 1, you can define a delay value (in seconds) to wait between each object instantiate.</p>"},{"location":"sequentials/gameobjectsequentials/sequential_instantiate/#parenting","title":"Parenting","text":"<p>This section lets you define the parenting options of the instantiated game object.</p>"},{"location":"sequentials/gameobjectsequentials/sequential_instantiate/#parent","title":"Parent","text":"<p>The instantiated object(s) will be the child(ren) of this Parent transform.</p>"},{"location":"sequentials/gameobjectsequentials/sequential_instantiate/#world-position-stays","title":"World Position Stays","text":"<p>When the instantiated object became a child of the Parent transform, this defines the position of the game object after parenting.</p> <p>So, if this is enabled, the world position of the game object stays same. Otherwise, it will be positioned according to its new Parent transform.</p>"},{"location":"sequentials/gameobjectsequentials/sequential_instantiate/#destroy-options","title":"Destroy Options","text":""},{"location":"sequentials/gameobjectsequentials/sequential_instantiate/#destroy-delayed","title":"Destroy Delayed","text":"<p>When this option is enabled, the instantiated object will be destroyed after a certian time.</p>"},{"location":"sequentials/gameobjectsequentials/sequential_instantiate/#delay-to-destroy","title":"Delay to Destroy","text":"<p>If the Destroy Delayed is enabled, the instantiated object will be destroyed after seconds that is defined in this property.</p>"},{"location":"sequentials/gameobjectsequentials/sequential_instantiate/#additional-positioning","title":"Additional Positioning","text":"<p>This group lets you define the position of the instantiated object.</p> <p></p>"},{"location":"sequentials/gameobjectsequentials/sequential_instantiate/#position-to-this","title":"Position to This","text":"<p>This will be the position of the instantiated object.</p> <p>You can enter a direct Vector3 value, or select a random position from a range, or get the Vector3 value from a variable or global variable, or you can position it to the same position of another transform.</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/gameobjectsequentials/sequential_instantiate/#offset","title":"Offset","text":"<p>This value will be added to the position of the instantiated game object. </p>"},{"location":"sequentials/lightsequentials/","title":"Light Sequentials","text":"<p>Sequentials in this category let you animate Light component properties. </p>"},{"location":"sequentials/lightsequentials/sequential_changelightcolor/","title":"Change Light Color","text":"<p>This sequential lets you change the color of a Light component with animation.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be Light type. So please make sure that the game object assigned in this field has a Light component attached. Otherwise you'll see a runtime error log when this sequential plays.</p>"},{"location":"sequentials/lightsequentials/sequential_changelightcolor/#color-change-type","title":"Color Change Type","text":"<p>This option determines the calculation of the end color.</p>"},{"location":"sequentials/lightsequentials/sequential_changelightcolor/#initial-to-value","title":"Initial to Value","text":"<p>This changes the color of the target text from its initial value (the value before this sequential starts) to the Color value.</p>"},{"location":"sequentials/lightsequentials/sequential_changelightcolor/#from-value-to-initial","title":"From Value to Initial","text":"<p>This instantly sets the color of the target text to the Color and then modifies it to its initial value again with animation.</p>"},{"location":"sequentials/lightsequentials/sequential_changelightcolor/#initial-plus-value","title":"Initial Plus Value","text":"<p>This adds Color to the target text's initial color value and changes it to the calculated value.</p>"},{"location":"sequentials/lightsequentials/sequential_changelightcolor/#initial-multiply-value","title":"Initial Multiply Value","text":"<p>This multiplies each component (R,G,B,A) of the text's initial color with the corresponding component of the Color and changes the target text color to the calculated color value.</p>"},{"location":"sequentials/lightsequentials/sequential_changelightcolor/#from-a-to-b","title":"From A to B","text":"<p>This lets you define the starting color and end color of the animation independent from the initial color of the target text.</p>"},{"location":"sequentials/lightsequentials/sequential_changelightcolor/#color","title":"Color","text":"<p>This is the Color value that determines the end color in accordance with the Color Change Type option as explained above.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/lightsequentials/sequential_changelightcolor/#from-color","title":"From Color","text":"<p>This is only available when the Color Change Type is From A to B.</p> <p>This is the starting color value of the animation.</p>"},{"location":"sequentials/lightsequentials/sequential_changelightintensity/","title":"Change Light Intensity","text":"<p>This sequential lets you change the intensity of a Light component with animation.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be Light type. So please make sure that the game object assigned in this field has a Light component attached. Otherwise you'll see a runtime error log when this sequential plays.</p>"},{"location":"sequentials/lightsequentials/sequential_changelightintensity/#end-value-type","title":"End Value Type","text":"<p>This option determines the calculation of the end value of the light intensity.</p>"},{"location":"sequentials/lightsequentials/sequential_changelightintensity/#initial-to-value","title":"Initial to Value","text":"<p>This changes the light intensity from its initial value (the value before this sequential starts) to the Intensity.</p>"},{"location":"sequentials/lightsequentials/sequential_changelightintensity/#from-value-to-initial","title":"From Value to Initial","text":"<p>This sets the light intensity to the Intensity and then changes it to its initial value again.</p>"},{"location":"sequentials/lightsequentials/sequential_changelightintensity/#initial-plus-value","title":"Initial Plus Value","text":"<p>This adds Intensity to the initial light intensity and changes it to the calculated value.</p>"},{"location":"sequentials/lightsequentials/sequential_changelightintensity/#initial-multiply-value","title":"Initial Multiply Value","text":"<p>This multiplies the light intensity's initial value with the  Intensity and changes the to the calculated value.</p>"},{"location":"sequentials/lightsequentials/sequential_changelightintensity/#from-a-to-b","title":"From A to B","text":"<p>This lets you define the starting intensity and end intensity of the animation independent from the initial value of the light intensity.</p>"},{"location":"sequentials/lightsequentials/sequential_changelightintensity/#intensity","title":"Intensity","text":"<p>This is the value that determines the end light intensity in accordance with the End Value Type option as explained above.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/lightsequentials/sequential_changelightintensity/#from-intensity","title":"From Intensity","text":"<p>This is only available when the End Value Type is From A to B.</p> <p>This is the starting intensity value of the animation.</p>"},{"location":"sequentials/lightsequentials/sequential_changelightrange/","title":"Change Light Range","text":"<p>This sequential lets you change the range of a Light component with animation.</p> <p>Tip</p> <p>This does not apply to Directional lights.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be Light type. So please make sure that the game object assigned in this field has a Light component attached. Otherwise you'll see a runtime error log when this sequential plays.</p>"},{"location":"sequentials/lightsequentials/sequential_changelightrange/#end-value-type","title":"End Value Type","text":"<p>This option determines the calculation of the end value of the light range.</p>"},{"location":"sequentials/lightsequentials/sequential_changelightrange/#initial-to-value","title":"Initial to Value","text":"<p>This changes the light range from its initial value (the value before this sequential starts) to the Range.</p>"},{"location":"sequentials/lightsequentials/sequential_changelightrange/#from-value-to-initial","title":"From Value to Initial","text":"<p>This sets the light range to the Range and then changes it to its initial value again.</p>"},{"location":"sequentials/lightsequentials/sequential_changelightrange/#initial-plus-value","title":"Initial Plus Value","text":"<p>This adds Range to the initial light range and changes it to the calculated value.</p>"},{"location":"sequentials/lightsequentials/sequential_changelightrange/#initial-multiply-value","title":"Initial Multiply Value","text":"<p>This multiplies the light range's initial value with the  Range and changes the to the calculated value.</p>"},{"location":"sequentials/lightsequentials/sequential_changelightrange/#from-a-to-b","title":"From A to B","text":"<p>This lets you define the starting range and end range of the animation independent from the initial value of the light range.</p>"},{"location":"sequentials/lightsequentials/sequential_changelightrange/#range","title":"Range","text":"<p>This is the value that determines the end light range in accordance with the End Value Type option as explained above.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/lightsequentials/sequential_changelightrange/#from-range","title":"From Range","text":"<p>This is only available when the End Value Type is From A to B.</p> <p>This is the starting range value of the animation.</p>"},{"location":"sequentials/loopsequentials/","title":"Loop Sequentials","text":"<p>To loop through a series of sequentials you need to use Begin Loop and End Loop sequentials.</p> <p>This is very similar to a traditional For Block in programming.</p> <p>Tip</p> <p>Loop is different from the Repeat Options of Animation Sequentials. While Repeat is for repeating single sequential, Loop is for repeating a series of sequentials as a group.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p>"},{"location":"sequentials/loopsequentials/#loop-count","title":"Loop Count","text":"<p>Every sequential between Begin Loop and End Looop sequentials will play a number of times which is defined in Loop Count.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/loopsequentials/#delay-between-loops","title":"Delay Between Loops","text":"<p>How many seconds to wait between each loop.</p>"},{"location":"sequentials/loopsequentials/#end-loop","title":"End Loop","text":"<p>For every Begin Loop sequential, you need to add an End Loop sequential which defines the scope of the loop. </p> <p>Warning</p> <p>Nested loops are not supported.</p>"},{"location":"sequentials/materialsequentials/","title":"Material Sequentials","text":"<p>This is the base sequential for animating material properties. All the derived sequentials has the options mentioned below.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be Renderer type. So please make sure that the game object assigned in this field has a Renderer component (e.g. Mesh Renderer or Sprite Renderer) attached. Otherwise you'll see a runtime error log when this sequential plays. </p>"},{"location":"sequentials/materialsequentials/#apply-for-all-materials","title":"Apply For All Materials","text":"<p>If checked, the sequential actions will be performed for all the assigned materials of the target renderer component.</p> <p>If unchecked, you can specify the indexes of the materials.</p>"},{"location":"sequentials/materialsequentials/#material-indexes","title":"Material Indexes","text":"<p>If Apply For All Materials is not checked, you can specify the indexes of the materials by adding indexes in the Material slot of the Renderer component to the list.</p>"},{"location":"sequentials/materialsequentials/#shader-property-name","title":"Shader Property Name","text":"<p>For some Material Sequentials, you need to specify the related property name defined in the shader of the material. </p> <p>If no name is defined, the sequential tries to perform the action with a default property name. </p> <p>e.g. for changing color it tries to change the color property but if you need to change a color with another property name defined in the shader, you need to enter it here.</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialfloat/","title":"Material Float Property Animator Sequential","text":"<p>This sequential lets you modify any float property of a material, so it's a very powerful sequential that can be used for general animation purposes for shaders that expose a float property.</p> <p>For example, you can use it to change the Smoothness property of a shader.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p> <p>Material Options</p> <p>This sequential derives from Material Sequential and gets all of its properties. So, to learn about the Material Options please see Material Base</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialfloat/#end-value-type","title":"End Value Type","text":"<p>This option determines the calculation of the end value of the float property.</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialfloat/#initial-to-value","title":"Initial to Value","text":"<p>This modifies the target shader property from its initial value (the value before this sequential starts) to the Value.</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialfloat/#from-value-to-initial","title":"From Value to Initial","text":"<p>This sets the target shader property to the Value and then modifies it to its initial value again.</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialfloat/#initial-plus-value","title":"Initial Plus Value","text":"<p>This adds Value to the target shader property's initial value and modifies it to the calculated end value.</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialfloat/#initial-multiply-value","title":"Initial Multiply Value","text":"<p>This multiplies the shader property's initial value with the Value and modifies the target shader property to the calculated value.</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialfloat/#from-a-to-b","title":"From A to B","text":"<p>This lets you define the starting value and end value of the float animation independent from the initial value of the target shader property.</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialfloat/#value","title":"Value","text":"<p>This is the float value that determines the end value in accordance with the End Value Type option as explained above.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialfloat/#from-value","title":"From Value","text":"<p>This is only available when the End Value Type is From A to B.</p> <p>This is the starting value of the float animation.</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialint/","title":"Material Integer Property Animator Sequential","text":"<p>This sequential lets you modify any integer property of a material, so it's a very powerful sequential that can be used for general animation purposes for shaders that expose an integer property.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p> <p>Material Options</p> <p>This sequential derives from Material Sequential and gets all of its properties. So, to learn about the Material Options please see Material Base</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialint/#end-value-type","title":"End Value Type","text":"<p>This option determines the calculation of the end value of the integer property.</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialint/#initial-to-value","title":"Initial to Value","text":"<p>This modifies the target shader property from its initial value (the value before this sequential starts) to the Value.</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialint/#from-value-to-initial","title":"From Value to Initial","text":"<p>This sets the target shader property to the Value and then modifies it to its initial value again.</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialint/#initial-plus-value","title":"Initial Plus Value","text":"<p>This adds Value to the target shader property's initial value and modifies it to the calculated end value.</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialint/#initial-multiply-value","title":"Initial Multiply Value","text":"<p>This multiplies the shader property's initial value with the Value and modifies the target shader property to the calculated value.</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialint/#from-a-to-b","title":"From A to B","text":"<p>This lets you define the starting value and end value of the float animation independent from the initial value of the target shader property.</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialint/#value","title":"Value","text":"<p>This is the integer value that determines the end value in accordance with the End Value Type option as explained above.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialint/#from-value","title":"From Value","text":"<p>This is only available when the End Value Type is From A to B.</p> <p>This is the starting value of the integer animation.</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialtextureoffset/","title":"Material Texture Offset Animator Sequential","text":"<p>This sequential lets you modify the placement offset of a given texture of a material.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p> <p>Material Options</p> <p>This sequential derives from Material Sequential and gets all of its properties. So, to learn about the Material Options please see Material Base</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialtextureoffset/#end-value-type","title":"End Value Type","text":"<p>This option determines the calculation of the end value of the offset.</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialtextureoffset/#initial-to-value","title":"Initial to Value","text":"<p>This modifies the target texture offset from its initial offset (the value before this sequential starts) to the Offset.</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialtextureoffset/#from-value-to-initial","title":"From Value to Initial","text":"<p>This sets the target texture offset to the Offset and then modifies it to its initial offset again.</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialtextureoffset/#initial-plus-value","title":"Initial Plus Value","text":"<p>This adds Offset to the target texture's initial offset and modifies it to the calculated end offset.</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialtextureoffset/#initial-multiply-value","title":"Initial Multiply Value","text":"<p>This multiplies the texture's initial offset with the Offset and modifies the target texture's offset to the calculated value.</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialtextureoffset/#from-a-to-b","title":"From A to B","text":"<p>This lets you define the starting offset and end offset of the animation independent from the initial offset of the texture.</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialtextureoffset/#offset","title":"Offset","text":"<p>This is the Vector2 offset that determines the end value in accordance with the End Value Type option as explained above.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialtextureoffset/#from-offset","title":"From Offset","text":"<p>This is only available when the End Value Type is From A to B.</p> <p>This is the starting offset of the animation.</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialtexturetile/","title":"Material Texture Tiling Animator Sequential","text":"<p>This sequential lets you modify the tiling of a given texture of a material.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p> <p>Material Options</p> <p>This sequential derives from Material Sequential and gets all of its properties. So, to learn about the Material Options please see Material Base</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialtexturetile/#end-value-type","title":"End Value Type","text":"<p>This option determines the calculation of the end value of the tiling.</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialtexturetile/#initial-to-value","title":"Initial to Value","text":"<p>This modifies the target texture tiling from its initial tiling (the value before this sequential starts) to the Tile.</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialtexturetile/#from-value-to-initial","title":"From Value to Initial","text":"<p>This sets the target texture tiling to the Tile and then modifies it to its initial tiling again.</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialtexturetile/#initial-plus-value","title":"Initial Plus Value","text":"<p>This adds Tile to the target texture's initial tiling and modifies it to the calculated end tiling.</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialtexturetile/#initial-multiply-value","title":"Initial Multiply Value","text":"<p>This multiplies the texture's initial tiling with the Tile and modifies the target texture's tiling to the calculated value.</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialtexturetile/#from-a-to-b","title":"From A to B","text":"<p>This lets you define the starting tiling and end tiling of the animation independent from the initial tiling of the texture.</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialtexturetile/#tile","title":"Tile","text":"<p>This is the Vector2 tiling that determines the end value in accordance with the End Value Type option as explained above.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/materialsequentials/sequential_animatematerialtexturetile/#from-tile","title":"From Tile","text":"<p>This is only available when the End Value Type is From A to B.</p> <p>This is the starting tiling of the animation.</p>"},{"location":"sequentials/materialsequentials/sequential_changematerial/","title":"Change Material","text":"<p>This sequential interpolates between two materials of the target renderer game object.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the Animation Options please see Animation Base</p> <p>Material Options</p> <p>This sequential derives from Material Sequential and gets all of its properties. So, to learn about the Material Options please see Material Base</p>"},{"location":"sequentials/materialsequentials/sequential_changematerial/#from-material","title":"From Material","text":"<p>Starting material of the interpolation.</p>"},{"location":"sequentials/materialsequentials/sequential_changematerial/#to-material","title":"To Material","text":"<p>Target material of the interpolation.</p> <p>Warning</p> <p>Please note that From Material and To Material must be same except for colors and floats.</p>"},{"location":"sequentials/materialsequentials/sequential_changematerialcolor/","title":"Change Material Color Sequential","text":"<p>This sequential changes the color of a material with animation.</p> <p>Tip</p> <p>To simply change the color of a UI Image, Sprite Renderer or TextMeshPro, you can use the Color Change Sequential</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the Animation Options please see Animation Base</p> <p>Material Options</p> <p>This sequential derives from Material Sequential and gets all of its properties. So, to learn about the Material Options please see Material Base</p>"},{"location":"sequentials/materialsequentials/sequential_changematerialcolor/#color-change-type","title":"Color Change Type","text":"<p>This option determines the calculation of the end color.</p>"},{"location":"sequentials/materialsequentials/sequential_changematerialcolor/#initial-to-value","title":"Initial to Value","text":"<p>This changes the color of the material from its initial value (the value before this sequential starts) to the Color value.</p>"},{"location":"sequentials/materialsequentials/sequential_changematerialcolor/#from-value-to-initial","title":"From Value to Initial","text":"<p>This instantly sets the color of the material to the Color and then modifies it to its initial value again with animation.</p>"},{"location":"sequentials/materialsequentials/sequential_changematerialcolor/#initial-plus-value","title":"Initial Plus Value","text":"<p>This adds Color to the target material's initial color value and changes it to the calculated value.</p>"},{"location":"sequentials/materialsequentials/sequential_changematerialcolor/#initial-multiply-value","title":"Initial Multiply Value","text":"<p>This multiplies each component (R,G,B,A) of the material's initial color with the corresponding component of the Color and changes the target material color to the calculated color value.</p>"},{"location":"sequentials/materialsequentials/sequential_changematerialcolor/#from-a-to-b","title":"From A to B","text":"<p>This lets you define the starting color and end color of the animation independent from the initial color of the target material.</p>"},{"location":"sequentials/materialsequentials/sequential_changematerialcolor/#color","title":"Color","text":"<p>This is the Color value that determines the end color in accordance with the Color Change Type option as explained above.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/materialsequentials/sequential_changematerialcolor/#from-color","title":"From Color","text":"<p>This is only available when the Color Change Type is From A to B.</p> <p>This is the starting color value of the animation.</p>"},{"location":"sequentials/materialsequentials/sequential_materialsettex/","title":"Set Material Texture","text":"<p>This sequential sets a new texture to the target material.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Material Options</p> <p>This sequential derives from Material Sequential and gets all of its properties. So, to learn about the Material Options please see Material Base</p>"},{"location":"sequentials/materialsequentials/sequential_materialsettex/#texture","title":"Texture","text":"<p>This is the texture to assign to the material.</p> <p>Warning</p> <p>Please note that although this sequential derives from Animation Base sequential, it does not apply any animation while setting the texture. It assigns the texture immediately.</p>"},{"location":"sequentials/methodsequentials/sequential_callmethod/","title":"Call Method Sequential","text":"<p>This sequential lets you call a method of a component attached to the Target Object.</p> <p>Tip</p> <p>Although this seems similar to the Unity Event Trigger Sequential, this lets you call methods with multiple parameters too. So if you just want to call a parameterless or single parameter method, you can use Unity Event Trigger Sequential alternatively.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p>"},{"location":"sequentials/methodsequentials/sequential_callmethod/#component-name","title":"Component Name","text":"<p>This is the class name with full namespace of a component that is attached to the target object.</p> <p>So, for example, to call a method of a SpriteRenderer component attached, you need to type UnityEngine.SpriteRenderer, UnityEngine.</p> <p>What's full type?</p> <ul> <li>For custom types, you can use the full class name with namespace. e.g. com.kerimkaynakcigames.MyGame.GameManager</li> <li>For built-in types, write the class name and then put a comma (,) and then assembly name. e.g. UnityEngine.SpriteRenderer, UnityEngine</li> </ul>"},{"location":"sequentials/methodsequentials/sequential_callmethod/#method-name","title":"Method Name","text":"<p>This is the name of the method to call.</p>"},{"location":"sequentials/methodsequentials/sequential_callmethod/#parameters","title":"Parameters","text":"<p>If the method you want to call needs parameters, you can set them in this list in exactly same order defined in the method itself.</p>"},{"location":"sequentials/methodsequentials/sequential_callmethod/#parameter-type","title":"Parameter Type","text":"<p>This should match the data type of the parameter of the method.</p>"},{"location":"sequentials/methodsequentials/sequential_callmethod/#parameter-value","title":"Parameter Value","text":"<p>This is the value of the parameter to send to the method to call.</p> <p>This property is dynamic and changes its type according to the Parameter Type. </p>"},{"location":"sequentials/miscsequentials/sequential_timescale/","title":"Time Scale Sequential","text":"<p>This sequential changes scale of time over time by modifying Time.timeScale.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p> <p>Warning</p> <p>Although this sequential derives from Object Returner sequential, it does not use any of the Target Object Options.</p>"},{"location":"sequentials/miscsequentials/sequential_timescale/#end-value-type","title":"End Value Type","text":"<p>This option determines the calculation of the end value of the time scale.</p>"},{"location":"sequentials/miscsequentials/sequential_timescale/#initial-to-value","title":"Initial to Value","text":"<p>This changes the time scale from its initial value (the value before this sequential starts) to the Time Scale.</p>"},{"location":"sequentials/miscsequentials/sequential_timescale/#from-value-to-initial","title":"From Value to Initial","text":"<p>This instantly sets the time scale to the Time Scale property and then changes it to its initial value again.</p>"},{"location":"sequentials/miscsequentials/sequential_timescale/#initial-plus-value","title":"Initial Plus Value","text":"<p>This adds Time Scale to the initial time scale and changes it to the calculated value.</p>"},{"location":"sequentials/miscsequentials/sequential_timescale/#initial-multiply-value","title":"Initial Multiply Value","text":"<p>This multiplies initial time scale with the Time Scale and changes the time scale to the calculated value.</p>"},{"location":"sequentials/miscsequentials/sequential_timescale/#from-a-to-b","title":"From A to B","text":"<p>This lets you define the starting time scale and end time scale of the animation independent from the initial time scale.</p>"},{"location":"sequentials/miscsequentials/sequential_timescale/#time-scale","title":"Time Scale","text":"<p>This is the float value that determines the end time scale in accordance with the End Value Type option as explained above.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/miscsequentials/sequential_timescale/#from-volume","title":"From Volume","text":"<p>This is only available when the End Value Type is From A to B.</p> <p>This is the starting time scale value of the animation.</p>"},{"location":"sequentials/particlesystemsequentials/","title":"Particle System Sequentials","text":"<p>Sequentials in this category lets you control a Particle System component.</p>"},{"location":"sequentials/particlesystemsequentials/sequential_changepssimulationspeed/","title":"Change Particle System Simulation Speed","text":"<p>This sequential lets you modify the simulation speed of a Particle System with animation.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be type of Particle System. So please make sure that the game object assigned in this field has the Particle System component attached. Otherwise you'll see a runtime error log when this sequential plays. </p>"},{"location":"sequentials/particlesystemsequentials/sequential_changepssimulationspeed/#end-value-type","title":"End Value Type","text":"<p>This option determines the calculation of the end value of the simulation speed.</p>"},{"location":"sequentials/particlesystemsequentials/sequential_changepssimulationspeed/#initial-to-value","title":"Initial to Value","text":"<p>This changes the simulation speed from its initial value (the value before this sequential starts) to the Speed.</p>"},{"location":"sequentials/particlesystemsequentials/sequential_changepssimulationspeed/#from-value-to-initial","title":"From Value to Initial","text":"<p>This sets the simulation speed to the Speed and then changes it to its initial value again.</p>"},{"location":"sequentials/particlesystemsequentials/sequential_changepssimulationspeed/#initial-plus-value","title":"Initial Plus Value","text":"<p>This adds Speed to the initial simulation speed and changes it to the calculated value.</p>"},{"location":"sequentials/particlesystemsequentials/sequential_changepssimulationspeed/#initial-multiply-value","title":"Initial Multiply Value","text":"<p>This multiplies the simulation speed's initial value with the  Speed and changes the to the calculated value.</p>"},{"location":"sequentials/particlesystemsequentials/sequential_changepssimulationspeed/#from-a-to-b","title":"From A to B","text":"<p>This lets you define the starting speed and end speed of the animation independent from the initial value of the simulation speed.</p>"},{"location":"sequentials/particlesystemsequentials/sequential_changepssimulationspeed/#speed","title":"Speed","text":"<p>This is the value that determines the end simulation speed in accordance with the End Value Type option as explained above.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/particlesystemsequentials/sequential_enabledisablepsmodule/","title":"Enable/Disable Particle System Module","text":"<p>This sequential lets you enable or disable a specific Particle System Module.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be type of Particle System. So please make sure that the game object assigned in this field has the Particle System component attached. Otherwise you'll see a runtime error log when this sequential plays. </p>"},{"location":"sequentials/particlesystemsequentials/sequential_enabledisablepsmodule/#module","title":"Module","text":"<p>Select the module to enable or disable.</p>"},{"location":"sequentials/particlesystemsequentials/sequential_enabledisablepsmodule/#enable","title":"Enable","text":"<p>If checked, this sequential will enable the selected module. Otherwise it will disable the selected module.</p>"},{"location":"sequentials/particlesystemsequentials/sequential_pauseparticlesystem/","title":"Pause Particle System Effect","text":"<p>This sequential pauses an already running Particle System effect.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be type of Particle System. So please make sure that the game object assigned in this field has the Particle System component attached. Otherwise you'll see a runtime error log when this sequential plays. </p>"},{"location":"sequentials/particlesystemsequentials/sequential_pauseparticlesystem/#pause-children-too","title":"Pause Children Too","text":"<p>If enabled, it will pause the children particle systems too.</p>"},{"location":"sequentials/particlesystemsequentials/sequential_playparticlesystem/","title":"Play Particle System Effect","text":"<p>This sequential starts playing a Particle System effect.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be type of Particle System. So please make sure that the game object assigned in this field has the Particle System component attached. Otherwise you'll see a runtime error log when this sequential plays. </p>"},{"location":"sequentials/particlesystemsequentials/sequential_playparticlesystem/#play-children-too","title":"Play Children Too","text":"<p>If enabled, it will play the children particle systems too.</p>"},{"location":"sequentials/particlesystemsequentials/sequential_stopparticlesystem/","title":"Stop Particle System Effect","text":"<p>This sequential stops an already running Particle System effect.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be type of Particle System. So please make sure that the game object assigned in this field has the Particle System component attached. Otherwise you'll see a runtime error log when this sequential plays. </p>"},{"location":"sequentials/particlesystemsequentials/sequential_stopparticlesystem/#stop-children-too","title":"Stop Children Too","text":"<p>If enabled, it will stop the children particle systems too.</p>"},{"location":"sequentials/pausesequentials/sequential_pause/","title":"Pause Sequential","text":"<p>This sequential delays playing the sequentials after itself.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p>"},{"location":"sequentials/pausesequentials/sequential_pause/#pause-time","title":"Pause Time","text":"<p>How many seconds to pause.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/pausesequentials/sequential_wait/","title":"Wait Sequential","text":"<p>This sequential holds all the sequentials after itself until the sequentials before itself has been completed.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Warning</p> <p>Wait inside a loop is not supported.</p>"},{"location":"sequentials/postprocessingsequentials/","title":"Post Processing Sequentials","text":"<p>Sequentials in this category let you animate parameters of Post Processing effects for both URP and Built-in Render Pipeline. </p> <p>Because Unity handles the post processing effects differently for URP and Built-in RP, there are specific sequentials for each post processing effect in both RP. So you need to use the correct one depending on your project render pipeline.</p> <p>Warning</p> <p>To use Post Processing related actions, you need to go to the Setup screen and choose related options. Please see the Setup documentation for more information.</p>"},{"location":"sequentials/postprocessingsequentials/builtin/","title":"Post Processing for Built-in RP Sequentials","text":"<p>Sequentials in this category let you animate parameters of Post Processing effects for Built-in Render Pipeline. </p> <p>In this page, you'll find common properties of built-in post processing sequentials. Every other property of these sequentials reflects the same properties of corresponding post processing effect. To learn more about fields/properties of each post processing effect please refer to the Unity Post-Processing Stack V2 Documentation</p> <p>Setup Post Processing first</p> <p>To use Post Processing related actions, you need to go to the Setup screen and choose related options. Please see the Setup documentation for more information.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be PostProcessVolume type. So please make sure that the game object assigned in this field has a PostProcessVolume component attached. Otherwise you'll see a runtime error log when this sequential plays.</p>"},{"location":"sequentials/postprocessingsequentials/builtin/#override-option","title":"Override Option","text":"<p>This option lets you enable or disable this specific post processing effect.</p> <ul> <li>Leave as is: This won't change the status of the effect. If it's currently enabled, it stays enabled. If it's currently disabled, it stays disabled.</li> <li>Force Enable: This force enables the effect even if it's currently disabled.</li> <li>Force Disable: This force disables the effect even if it's currently enabled.</li> </ul>"},{"location":"sequentials/postprocessingsequentials/builtin/#enable-options","title":"Enable Options","text":"<p>For each options, there are checkboxes enables modifying the related property. If you don't enable a property, it won't modify its values.</p>"},{"location":"sequentials/postprocessingsequentials/builtin/#end-value-calculation","title":"End Value Calculation","text":"<p>To learn about how the end values of parameters are calculated, please refer this section</p>"},{"location":"sequentials/postprocessingsequentials/urp/","title":"Post Processing Volume Sequentials","text":"<p>Sequentials in this category let you animate parameters of Post Processing effects for Universal Render Pipeline. </p> <p>In this page, you'll find common properties of built-in post processing sequentials. Every other property of these sequentials reflects the same properties of corresponding post processing effect. To learn more about fields/properties of each post processing effect please refer to the Unity Post-Processing Documentation</p> <p>Setup Post Processing first</p> <p>To use Post Processing related actions, you need to go to the Setup screen and choose related options. Please see the Setup documentation for more information.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be Volume type. So please make sure that the game object assigned in this field has a Volume component attached. Otherwise you'll see a runtime error log when this sequential plays.</p>"},{"location":"sequentials/postprocessingsequentials/urp/#override-option","title":"Override Option","text":"<p>This option lets you enable or disable this specific post processing effect.</p> <ul> <li>Leave as is: This won't change the status of the effect. If it's currently enabled, it stays enabled. If it's currently disabled, it stays disabled.</li> <li>Force Enable: This force enables the effect even if it's currently disabled.</li> <li>Force Disable: This force disables the effect even if it's currently enabled.</li> </ul>"},{"location":"sequentials/postprocessingsequentials/urp/#enable-options","title":"Enable Options","text":"<p>For each options, there are checkboxes enables modifying the related property. If you don't enable a property, it won't modify its values.</p>"},{"location":"sequentials/postprocessingsequentials/urp/#end-value-calculation","title":"End Value Calculation","text":"<p>To learn about how the end values of parameters are calculated, please refer this section</p>"},{"location":"sequentials/rigidbodysequentials/sequential_rigidbodyaddexplosion/","title":"Add Explosion Force Sequential","text":"<p>This sequential applies force to a Rigidbody component that simulates explosion effects.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be Rigidbody2D type. So please make sure that the game object assigned in this field has a Rigidbody2D component attached. Otherwise you'll see a runtime error log when this sequential plays.</p>"},{"location":"sequentials/rigidbodysequentials/sequential_rigidbodyaddexplosion/#explosion-force","title":"Explosion Force","text":"<p>The force of the explosion effect.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/rigidbodysequentials/sequential_rigidbodyaddexplosion/#explosion-radius","title":"Explosion Radius","text":"<p>The radius of the sphere within which the explosion has its effect.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/rigidbodysequentials/sequential_rigidbodyaddexplosion/#explosion-position","title":"Explosion Position","text":"<p>The center of the sphere within which the explosion has its effect.</p>"},{"location":"sequentials/rigidbodysequentials/sequential_rigidbodyaddforce2d/","title":"Add Force 2d Sequential","text":"<p>This sequential adds force to a Rigidbody2D component with animation.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be Rigidbody2D type. So please make sure that the game object assigned in this field has a Rigidbody2D component attached. Otherwise you'll see a runtime error log when this sequential plays.</p>"},{"location":"sequentials/rigidbodysequentials/sequential_rigidbodyaddforce2d/#add-force-option","title":"Add Force Option","text":"<p>This option defines how to apply the force.</p>"},{"location":"sequentials/rigidbodysequentials/sequential_rigidbodyaddforce2d/#standard","title":"Standard","text":"<p>This applies a force to the rigidbody by calling its AddForce() method.</p>"},{"location":"sequentials/rigidbodysequentials/sequential_rigidbodyaddforce2d/#relative","title":"Relative","text":"<p>This applies a force to the rigidbody relative to its coordinate system by calling AddRelativeForce() method.</p>"},{"location":"sequentials/rigidbodysequentials/sequential_rigidbodyaddforce2d/#apply-to-position","title":"Apply To Position","text":"<p>This applies a force at a position so it applies a torque and force on the rigidbody.</p>"},{"location":"sequentials/rigidbodysequentials/sequential_rigidbodyaddforce2d/#force","title":"Force","text":"<p>This is the force to be applied to the rigidbody.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/rigidbodysequentials/sequential_rigidbodyaddforce2d/#force-mode","title":"Force Mode","text":"<ul> <li>Force: Add a continuous force to the rigidbody by using its mass.</li> <li>Impulse: Add an instant force impulse to the rigidbody by using its mass.</li> </ul>"},{"location":"sequentials/rigidbodysequentials/sequential_rigidbodyaddforce2d/#position-to-apply","title":"Position to Apply","text":"<p>This is only available when the Add Force Option is Apply To Position.</p> <p>This is the position to apply force in world coordinates.</p>"},{"location":"sequentials/rigidbodysequentials/sequential_rigidbodyaddforce3d/","title":"Add Force 3d Sequential","text":"<p>This sequential adds force to a 3d rigidbody component with animation.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be Rigidbody type. So please make sure that the game object assigned in this field has a Rigidbody component attached. Otherwise you'll see a runtime error log when this sequential plays.</p>"},{"location":"sequentials/rigidbodysequentials/sequential_rigidbodyaddforce3d/#add-force-option","title":"Add Force Option","text":"<p>This option defines how to apply the force.</p>"},{"location":"sequentials/rigidbodysequentials/sequential_rigidbodyaddforce3d/#standard","title":"Standard","text":"<p>This applies a force to the rigidbody by calling its AddForce() method.</p>"},{"location":"sequentials/rigidbodysequentials/sequential_rigidbodyaddforce3d/#relative","title":"Relative","text":"<p>This applies a force to the rigidbody relative to its coordinate system by calling AddRelativeForce() method.</p>"},{"location":"sequentials/rigidbodysequentials/sequential_rigidbodyaddforce3d/#apply-to-position","title":"Apply To Position","text":"<p>This applies a force at a position so it applies a torque and force on the rigidbody.</p>"},{"location":"sequentials/rigidbodysequentials/sequential_rigidbodyaddforce3d/#force","title":"Force","text":"<p>This is the force to be applied to the rigidbody.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/rigidbodysequentials/sequential_rigidbodyaddforce3d/#force-mode","title":"Force Mode","text":"<ul> <li>Force: Add a continuous force to the rigidbody by using its mass.</li> <li>Acceleration: Add a continuous acceleration to the rigidbody. It ignores the mass.</li> <li>Impulse: Add an instant force impulse to the rigidbody by using its mass.</li> <li>Velocity Change: Add an instant velocity change to the rigidbody. It ignores the mass.</li> </ul>"},{"location":"sequentials/rigidbodysequentials/sequential_rigidbodyaddforce3d/#position-to-apply","title":"Position to Apply","text":"<p>This is only available when the Add Force Option is Apply To Position.</p> <p>This is the position to apply force in world coordinates.</p>"},{"location":"sequentials/rigidbodysequentials/sequential_rigidbodymove/","title":"Move Rigidbody / Rigidbody2D Sequential","text":"<p>This sequential moves a Rigidbody or Rigidbody2D with animation complying with the rigidbody's interpolation setting.</p> <p>Tip</p> <p>If you just want to move a transform (not a rigidbody specifically), use Move Transform instead.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be Rigidbody type. So please make sure that the game object assigned in this field has a Rigidbody component attached. Otherwise you'll see a runtime error log when this sequential plays.</p>"},{"location":"sequentials/rigidbodysequentials/sequential_rigidbodymove/#move-type","title":"Move Type","text":"<p>This option determines the calculation of the end value of the move action.</p>"},{"location":"sequentials/rigidbodysequentials/sequential_rigidbodymove/#initial-to-value","title":"Initial to Value","text":"<p>This moves the target rigidbody from its initial value (the value before this sequential starts) to the Move Value.</p>"},{"location":"sequentials/rigidbodysequentials/sequential_rigidbodymove/#from-value-to-initial","title":"From Value to Initial","text":"<p>This teleports the target rigidbody to the Move Value and then moves it to its initial value again.</p>"},{"location":"sequentials/rigidbodysequentials/sequential_rigidbodymove/#initial-plus-value","title":"Initial Plus Value","text":"<p>This adds Move Value to the target rigidbody's initial value and moves it to the calculated position.</p> <p>For example, to move a rigidbody 10 units right and 20 units up, but if you don't know the exact target position you can use this option with Move Value (10,20). </p>"},{"location":"sequentials/rigidbodysequentials/sequential_rigidbodymove/#initial-multiply-value","title":"Initial Multiply Value","text":"<p>This multiplies each axis of the rigidbody's initial position with the corresponding axis of the Move Value and moves the target rigidbody to the calculated position.</p>"},{"location":"sequentials/rigidbodysequentials/sequential_rigidbodymove/#from-a-to-b","title":"From A to B","text":"<p>This lets you define the starting position and end position of the move animation independent from the initial position of the target rigidbody.</p> <p></p>"},{"location":"sequentials/rigidbodysequentials/sequential_rigidbodymove/#move-value","title":"Move Value","text":"<p>This is the Vector3 value that determines the end position in accordance with the Move Type option as explained above.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>For example, to move the target transform to the position of another transform, you can select Another Transform or Sequential for the value assigning option and then choose the transform to go.</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p> <p>Tip</p> <p>When you assign Move Value with Sequential option, you need to connect the related sequential's Sequential output port to this sequential's To Position input port. </p>"},{"location":"sequentials/rigidbodysequentials/sequential_rigidbodymove/#from-position","title":"From Position","text":"<p>This is only available when the Move Type is From A to B.</p> <p>This is the starting position of the move animation.</p> <p>Tip</p> <p>When you assign From Position with Sequential option, you need to connect the related sequential's Sequential output port to this sequential's From Position input port. </p>"},{"location":"sequentials/rigidbodysequentials/sequential_rigidbodymove/#to-position","title":"To Position","text":"<p>This is only available when the Move Type is From A to B.</p> <p>This is the end position of the move animation.</p> <p>Tip</p> <p>When you assign To Position with Sequential option, you need to connect the related sequential's Sequential output port to this sequential's To Position input port. </p>"},{"location":"sequentials/rigidbodysequentials/sequential_rigidbodymove/#animate-local-position","title":"Animate Local Position","text":"<p>This has no effect on this sequential. It's there because this sequential is derived from Move Transform Sequential</p>"},{"location":"sequentials/rigidbodysequentials/sequential_rigidbodymove/#offset","title":"Offset","text":"<p>This adds an offset to the end position that's calculated by the Move Type and Move Value parameters.</p> <p>Tip</p> <p>This is especially useful when you set the Move Value to Another Transform or Sequential because you may want to move the target rigidbody to another transform's position but with an offset.</p>"},{"location":"sequentials/sequentialobjectreturner/","title":"Object Returner Sequential","text":"<p>This sequential gets a target object that is used by other sequentials.</p> <p>You can specify the options for how to find the target object.</p> <p>Important</p> <p>Understanding how to get target object is important because almost every sequential works on a target game object and all these sequentials get the target object by using options mentioned in this section.</p>"},{"location":"sequentials/sequentialobjectreturner/#target-object-get-type","title":"Target Object Get Type","text":"<ul> <li>Single Object: This will return a single game object. So any sequential that gets a target object will perform the actions on this single game object.</li> <li>Multiple Objects: This will return multiple game objects. So any sequential that gets a target object will perform the actions on each of the game objects returned.</li> </ul>"},{"location":"sequentials/sequentialobjectreturner/multiple/","title":"Getting Multiple Target Objects","text":"<p>In this section, you'll find information about getting multiple game objects to be used as the Target Objects in most of the sequentials.</p>"},{"location":"sequentials/sequentialobjectreturner/multiple/#get-target-object-by","title":"Get Target Object By","text":"<p>This option lets you choose how to find the target objects. There are a few options to choose from and each of them has its own properties.</p>"},{"location":"sequentials/sequentialobjectreturner/multiple/#delay-between-multiple-targets","title":"Delay Between Multiple Targets","text":"<p>By default, a sequential starts performing its actions on every target game object in the same frame by looping. But if you want to wait for a time before performing the sequential action for the next target object in Target Objects list, set a value (in seconds) for this option.</p> <p>Info</p> <p>You can enter different type of values here by clicking the down arrow  and choosing another option. To see how this works, see the Value Assign section</p>"},{"location":"sequentials/sequentialobjectreturner/multiple/#direct-assignment","title":"Direct Assignment","text":"<p>This lets you select multiple game objects as the target objects from the scene.</p>"},{"location":"sequentials/sequentialobjectreturner/multiple/#target-objects","title":"Target Objects","text":"<p>This list is used to assign multiple target objects directly from a scene.</p>"},{"location":"sequentials/sequentialobjectreturner/multiple/#by-name","title":"By Name","text":"<p>This lets you find multiple target game objects that matches the name.</p>"},{"location":"sequentials/sequentialobjectreturner/multiple/#target-objects-name","title":"Target Objects Name","text":"<p>This is the name of the game objects to find from the scene. It returns all the game objects that has the same name with this property.</p>"},{"location":"sequentials/sequentialobjectreturner/multiple/#find-only-in-children","title":"Find Only In Children","text":"<p>If this is enabled, it tries to find the target objects from child game objects of the game object that this sequential is attached to.</p>"},{"location":"sequentials/sequentialobjectreturner/multiple/#find-in-children-of-this","title":"Find In Children Of This","text":"<p>This is only available when Find Only In Children is enabled.</p> <p>If nothing is assigned to this field, it tries to find in children of the game object this sequential is attached to.</p> <p>If you assign another game object here, it will try to find in children of that assigned game object.</p>"},{"location":"sequentials/sequentialobjectreturner/multiple/#by-tag","title":"By Tag","text":"<p>This lets you find multiple target game objects that has this tag.</p>"},{"location":"sequentials/sequentialobjectreturner/multiple/#target-objects-tag","title":"Target Objects Tag","text":"<p>This is the tag of the game objects to find from the scene. </p>"},{"location":"sequentials/sequentialobjectreturner/multiple/#by-type","title":"By Type","text":"<p>This lets you find  target game objects by their class type.</p>"},{"location":"sequentials/sequentialobjectreturner/multiple/#target-objects-type","title":"Target Objects Type","text":"<p>This is the class name with full namespace of a component that is attached to the target object.</p> <p>So, for example, to find game objects with SpriteRenderer component attached, you need to type UnityEngine.SpriteRenderer, UnityEngine.</p> <p>What's full type?</p> <ul> <li>For custom types, you can use the full class name with namespace. e.g. com.kerimkaynakcigames.MyGame.GameManager</li> <li>For built-in types, write the class name and then put a comma (,) and then assembly name. e.g. UnityEngine.SpriteRenderer, UnityEngine</li> </ul>"},{"location":"sequentials/sequentialobjectreturner/multiple/#find-only-in-children_1","title":"Find Only In Children","text":"<p>See Find Only In Children</p>"},{"location":"sequentials/sequentialobjectreturner/multiple/#find-in-children-of-this_1","title":"Find In Children Of This","text":"<p>See Find In Children Of This</p>"},{"location":"sequentials/sequentialobjectreturner/multiple/#find-inactive-objects-too","title":"Find Inactive Objects Too","text":"<p>By default, only the active objects are returned as the target objects. But to search in inactive objects too, enable this option.</p>"},{"location":"sequentials/sequentialobjectreturner/multiple/#by-object-group","title":"By Object Group","text":"<p>This lets you find game objects which have Sequentior Object Group component and have the same Group Name.</p> <p>This is similar to finding by Tag but has more options and because Tags are used for other purposes in game development, you may not want to add and assign tags just for getting target objects in Sequentior. So this is an alternative way for grouping objects to find them in sequentials.</p>"},{"location":"sequentials/sequentialobjectreturner/multiple/#target-objects-group-name","title":"Target Objects Group Name","text":"<p>For example, to perform actions on all (or some of) the Buttons in your scene, you can add Sequentior Object Group component to these buttons and give them a Group Name (say \"Buttons\"). Then in sequentials, you can get all of those buttons by entering the same group name to the Target Objects Group Name field.</p>"},{"location":"sequentials/sequentialobjectreturner/multiple/#sequentior-object-group-component","title":"Sequentior Object Group Component","text":""},{"location":"sequentials/sequentialobjectreturner/multiple/#group","title":"Group","text":"<p>This is the name of the group this game object belongs to.</p> <p>To find this object in sequentials, Target Objects Group Name should match this value.</p>"},{"location":"sequentials/sequentialobjectreturner/multiple/#order","title":"Order","text":"<p>When multiple game objects are found in the same group, the sequential performs its related actions for each of those game objects one by one. But the order of the found objects are not deterministic, so you can't be sure about that sequential will perform the action on which game object first. To define a specific order, you can enter values to this field for each game objects that belongs the same group.</p> <p>The game object that has the minimum Order value will be the first game object in the list.</p>"},{"location":"sequentials/sequentialobjectreturner/multiple/#by-sequential","title":"By Sequential","text":"<p>This lets you get the target objects from another sequential's returned game objects.</p> <p>Some sequentials return game objects and expose these returned game objects to their Sequential output pin. e.g. Instantiate Sequential or Find Object Sequential.</p> <p>So, to get these returned game objects as the target of another sequential, choose this option and connect the Sequential output pin of other sequential to the Target Obj input pin of this sequential. </p>"},{"location":"sequentials/sequentialobjectreturner/multiple/#target-objects-sequential","title":"Target Objects Sequential","text":"<p>This is the sequential that will return the game object as the target object.</p> <p>Warning</p> <p>Do not assign this field manually. This is automatically assigned when you connect another sequential's Sequential output pin to this sequential's Target Obj input pin.</p>"},{"location":"sequentials/sequentialobjectreturner/single/","title":"Getting Single Target Object","text":"<p>In this section, you'll find information about getting a single game object to be used as the Target Object in most of the sequentials.</p>"},{"location":"sequentials/sequentialobjectreturner/single/#get-target-object-by","title":"Get Target Object By","text":"<p>This option lets you choose how to find the target object. There are a few options to choose from and each of them has its own properties.</p>"},{"location":"sequentials/sequentialobjectreturner/single/#direct-assignment","title":"Direct Assignment","text":"<p>This lets you select a single game object as the target object from the scene.</p>"},{"location":"sequentials/sequentialobjectreturner/single/#target-object","title":"Target Object","text":"<p>This is used to assign a single target object directly.</p> <p>Note</p> <p>If you forgot to assign a Target Object, the parent Sequentior Manager gameobject will be assigned automatically as the target object. But this will throw a warning in console.</p>"},{"location":"sequentials/sequentialobjectreturner/single/#parent-sequentior","title":"Parent Sequentior","text":"<p>This sets the parent sequentior manager of this sequential as the target object.</p>"},{"location":"sequentials/sequentialobjectreturner/single/#by-name","title":"By Name","text":"<p>This lets you find a single target game object by its name.</p>"},{"location":"sequentials/sequentialobjectreturner/single/#target-object-name","title":"Target Object Name","text":"<p>This is the name of the game object to find from the scene. The first game object with this name will be returned.</p>"},{"location":"sequentials/sequentialobjectreturner/single/#find-only-in-children","title":"Find Only In Children","text":"<p>If this is enabled, it tries to find the target object from child game objects of the game object that this sequential is attached to.</p>"},{"location":"sequentials/sequentialobjectreturner/single/#find-in-children-of-this","title":"Find In Children Of This","text":"<p>This is only available when Find Only In Children is enabled.</p> <p>If nothing is assigned to this field, it tries to find in children of the game object this sequential is attached to.</p> <p>If you assign another game object here, it will try to find in children of that assigned game object.</p>"},{"location":"sequentials/sequentialobjectreturner/single/#by-tag","title":"By Tag","text":"<p>This lets you find a single target game object by its tag.</p>"},{"location":"sequentials/sequentialobjectreturner/single/#target-object-tag","title":"Target Object Tag","text":"<p>This is the tag of the game object to find from the scene. The first game object with this tag will be returned.</p>"},{"location":"sequentials/sequentialobjectreturner/single/#by-type","title":"By Type","text":"<p>This lets you find a single target game object by its class type.</p>"},{"location":"sequentials/sequentialobjectreturner/single/#target-object-type","title":"Target Object Type","text":"<p>This is the class name with full namespace of a component that is attached to the target object.</p> <p>So, for example, to find a game object with SpriteRenderer component attached, you need to type UnityEngine.SpriteRenderer, UnityEngine.</p> <p>What's full type?</p> <ul> <li>For custom types, you can use the full class name with namespace. e.g. com.kerimkaynakcigames.MyGame.GameManager</li> <li>For built-in types, write the class name and then put a comma (,) and then assembly name. e.g. UnityEngine.SpriteRenderer, UnityEngine</li> </ul>"},{"location":"sequentials/sequentialobjectreturner/single/#find-only-in-children_1","title":"Find Only In Children","text":"<p>See Find Only In Children</p>"},{"location":"sequentials/sequentialobjectreturner/single/#find-in-children-of-this_1","title":"Find In Children Of This","text":"<p>See Find In Children Of This</p>"},{"location":"sequentials/sequentialobjectreturner/single/#find-inactive-objects-too","title":"Find Inactive Objects Too","text":"<p>By default, only the first active object is returned as the target object. But to search in inactive objects too, enable this option.</p>"},{"location":"sequentials/sequentialobjectreturner/single/#by-sequential","title":"By Sequential","text":"<p>This lets you get the target object from another sequential's returned game object.</p> <p>Some sequentials return game objects and expose this returned game object to their Sequential output pin. e.g. Instantiate Sequential or Find Object Sequential.</p> <p>So, to get these returned game objects as the target of another sequential, choose this option and connect the Sequential output pin of other sequential to the Target Obj input pin of this sequential. </p>"},{"location":"sequentials/sequentialobjectreturner/single/#target-object-sequential","title":"Target Object Sequential","text":"<p>This is the sequential that will return the game object as the target object.</p> <p>Warning</p> <p>Do not assign this field manually. This is automatically assigned when you connect another sequential's Sequential output pin to this sequential's Target Obj input pin.</p>"},{"location":"sequentials/sequentialobjectreturner/single/#by-variable","title":"By Variable","text":"<p>This lets you get the target object from a variable of parent Sequentior Manager of this sequential.</p>"},{"location":"sequentials/sequentialobjectreturner/single/#target-object-variable","title":"Target Object Variable","text":"<p>Enter a variable name of type Game Object. This variable needs to be in the Variables List of parent Sequentior Manager.</p> <p></p> <p>Info</p> <p>See Variables for more information about variables.</p>"},{"location":"sequentials/sequentiorsequentials/","title":"Sequentior Sequentials","text":"<p>Sequentials in this category lets you control another Sequentior Managers.</p> <p>For example, you can define create individual sequentior managers for specific tasks and then play those sequentior managers from a master sequentior manager. This resembles the defining methods for each task and then calling them from another method.</p>"},{"location":"sequentials/sequentiorsequentials/sequential_getsequentior/","title":"Get Sequentior Manager Component","text":"<p>This sequential gets Sequentior Manager component from target object and returns it in Sequential output pin.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) or at least one of its childs needs to be type of Sequentior Manager. So please make sure that the game object assigned in this field has the Sequentior Manager component attached or a child game object that has Sequentior Manager component. Otherwise you'll see a runtime error log when this sequential plays. </p>"},{"location":"sequentials/sequentiorsequentials/sequential_getsequentior/#get-option","title":"Get Option","text":"<p>This option defines how to get the Sequentior Manager from target object.</p> <ul> <li>Direct: Tries to get the Sequentior Manager component directly from the target object. This assumes the target object has Sequentior Manager component attached.</li> <li>By Name: Tries to find a child gameobject of the target object and gets the Sequentior Manager component attached to this child.</li> <li>First Child: Gets the first child gameobject of the target object and gets the Sequentior Manager component attached to this child.</li> </ul>"},{"location":"sequentials/sequentiorsequentials/sequential_getsequentior/#child-name","title":"Child Name","text":"<p>If the Get Option is set to By Name, this field is the child name to find.</p>"},{"location":"sequentials/sequentiorsequentials/sequential_getsequentior/#only-actives","title":"Only Actives","text":"<p>If enabled, it will search only active child gameobjects. Otherwise inactive child gameobject can be returned too.</p>"},{"location":"sequentials/sequentiorsequentials/sequential_getsequentior/#log-error-if-not-found","title":"Log Error If Not Found","text":"<p>If no Sequentior Manager component found in target gameobject, it will print an error log when this option is enabled.</p>"},{"location":"sequentials/sequentiorsequentials/sequential_pausesequentior/","title":"Pause Another Sequentior","text":"<p>This sequential pauses any playing sequentials of another Sequentior Manager.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be type of Sequentior Manager. So please make sure that the game object assigned in this field has the Sequentior Manager component attached. Otherwise you'll see a runtime error log when this sequential plays. </p>"},{"location":"sequentials/sequentiorsequentials/sequential_playsequentior/","title":"Play Another Sequentior","text":"<p>This sequential plays (starts) sequentials of another Sequentior Manager.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be type of Sequentior Manager. So please make sure that the game object assigned in this field has the Sequentior Manager component attached. Otherwise you'll see a runtime error log when this sequential plays. </p>"},{"location":"sequentials/sequentiorsequentials/sequential_playsequentior/#completes-when-sequentior-completes","title":"Completes When Sequentior Completes","text":"<p>If not checked, this sequential starts the target Sequentior Manager and returns as completed immediately without waiting for the target Sequentior's sequentials completes or not.</p> <p>If checked, this sequential won't raise its completed event until all the target sequentiors play and completes their actions.</p> <p>This is useful when creating multiple sequentiors for specific actions and playing them one after another in another sequentior by adding Wait Sequential between them.</p> <p></p>"},{"location":"sequentials/sequentiorsequentials/sequential_resumesequentior/","title":"Resume Another Sequentior","text":"<p>This sequential resumes playing sequentials of another paused Sequentior Manager.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be type of Sequentior Manager. So please make sure that the game object assigned in this field has the Sequentior Manager component attached. Otherwise you'll see a runtime error log when this sequential plays. </p>"},{"location":"sequentials/sequentiorsequentials/sequential_stopsequentior/","title":"Stop Another Sequentior","text":"<p>This sequential stops any playing sequentials of another Sequentior Manager.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be type of Sequentior Manager. So please make sure that the game object assigned in this field has the Sequentior Manager component attached. Otherwise you'll see a runtime error log when this sequential plays. </p>"},{"location":"sequentials/textsequentials/","title":"Text Sequentials","text":"<p>Sequentials in this category let you animate TextMeshPro component properties. </p> <p>Warning</p> <p>To use TextMeshPro related actions, you need to go to the Setup screen and choose related options. Please see the Setup documentation for more information.</p>"},{"location":"sequentials/textsequentials/sequential_changetext/","title":"Change Text Sequential","text":"<p>This sequential changes the text of a TextMesPro component immediately.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be TextMeshPro type. So please make sure that the game object assigned in this field has a TextMeshPro component attached. Otherwise you'll see a runtime error log when this sequential plays.</p> <p>Warning</p> <p>Please note that although this sequential derives from Animation Base sequential, it does not apply any animation while setting the text. It assigns the text immediately.</p>"},{"location":"sequentials/textsequentials/sequential_changetext/#text","title":"Text","text":"<p>Text to assign.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/textsequentials/sequential_changetextcolor/","title":"Change Text Color Sequential","text":"<p>This sequential changes the color of a TextMeshPro with animation.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be TextMeshPro type. So please make sure that the game object assigned in this field has a TextMeshPro component attached. Otherwise you'll see a runtime error log when this sequential plays.</p>"},{"location":"sequentials/textsequentials/sequential_changetextcolor/#color-change-type","title":"Color Change Type","text":"<p>This option determines the calculation of the end color.</p>"},{"location":"sequentials/textsequentials/sequential_changetextcolor/#initial-to-value","title":"Initial to Value","text":"<p>This changes the color of the target text from its initial value (the value before this sequential starts) to the Color value.</p>"},{"location":"sequentials/textsequentials/sequential_changetextcolor/#from-value-to-initial","title":"From Value to Initial","text":"<p>This instantly sets the color of the target text to the Color and then modifies it to its initial value again with animation.</p>"},{"location":"sequentials/textsequentials/sequential_changetextcolor/#initial-plus-value","title":"Initial Plus Value","text":"<p>This adds Color to the target text's initial color value and changes it to the calculated value.</p>"},{"location":"sequentials/textsequentials/sequential_changetextcolor/#initial-multiply-value","title":"Initial Multiply Value","text":"<p>This multiplies each component (R,G,B,A) of the text's initial color with the corresponding component of the Color and changes the target text color to the calculated color value.</p>"},{"location":"sequentials/textsequentials/sequential_changetextcolor/#from-a-to-b","title":"From A to B","text":"<p>This lets you define the starting color and end color of the animation independent from the initial color of the target text.</p>"},{"location":"sequentials/textsequentials/sequential_changetextcolor/#color","title":"Color","text":"<p>This is the Color value that determines the end color in accordance with the Color Change Type option as explained above.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/textsequentials/sequential_changetextcolor/#from-color","title":"From Color","text":"<p>This is only available when the Color Change Type is From A to B.</p> <p>This is the starting color value of the animation.</p>"},{"location":"sequentials/textsequentials/sequential_changetextdilate/","title":"Change Text Dilate Sequential","text":"<p>This sequential will change the Dilate property of a TextMeshPro component with animation.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be TextMeshPro type. So please make sure that the game object assigned in this field has a TextMeshPro component attached. Otherwise you'll see a runtime error log when this sequential plays.</p>"},{"location":"sequentials/textsequentials/sequential_changetextdilate/#end-value-type","title":"End Value Type","text":"<p>This option determines the calculation of the end value of the dilate.</p>"},{"location":"sequentials/textsequentials/sequential_changetextdilate/#initial-to-value","title":"Initial to Value","text":"<p>This modifies the target text's dilate from its initial value (the value before this sequential starts) to the Dilate.</p>"},{"location":"sequentials/textsequentials/sequential_changetextdilate/#from-value-to-initial","title":"From Value to Initial","text":"<p>This sets the target text's dilate to the Dilate and then modifies it to its initial value again.</p>"},{"location":"sequentials/textsequentials/sequential_changetextdilate/#initial-plus-value","title":"Initial Plus Value","text":"<p>This adds Dilate to the target text's initial dilate and modifies it to the calculated end value.</p>"},{"location":"sequentials/textsequentials/sequential_changetextdilate/#initial-multiply-value","title":"Initial Multiply Value","text":"<p>This multiplies the text's initial dilate with the Dilate and modifies the target text's dilate to the calculated value.</p>"},{"location":"sequentials/textsequentials/sequential_changetextdilate/#from-a-to-b","title":"From A to B","text":"<p>This lets you define the starting dilate and end dilate of the animation independent from the initial dilate of the target text.</p>"},{"location":"sequentials/textsequentials/sequential_changetextdilate/#dilate","title":"Dilate","text":"<p>This is the dilate that determines the end dilate in accordance with the End Value Type option as explained above.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/textsequentials/sequential_changetextdilate/#from-dilate","title":"From Dilate","text":"<p>This is only available when the End Value Type is From A to B.</p> <p>This is the starting dilate of the animation.</p>"},{"location":"sequentials/textsequentials/sequential_changetextfontsize/","title":"Change Text Font Size Sequential","text":"<p>This sequential changes the font size of TextMeshPro component with animation.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be TextMeshPro type. So please make sure that the game object assigned in this field has a TextMeshPro component attached. Otherwise you'll see a runtime error log when this sequential plays.</p> <p>Important</p> <p>Make sure AutoSize property of TMP Text is disabled!</p>"},{"location":"sequentials/textsequentials/sequential_changetextfontsize/#end-value-type","title":"End Value Type","text":"<p>This option determines the calculation of the end value of the font size.</p>"},{"location":"sequentials/textsequentials/sequential_changetextfontsize/#initial-to-value","title":"Initial to Value","text":"<p>This modifies the target text's font size from its initial value (the value before this sequential starts) to the Font Size.</p>"},{"location":"sequentials/textsequentials/sequential_changetextfontsize/#from-value-to-initial","title":"From Value to Initial","text":"<p>This sets the target text's font size to the Font Size and then modifies it to its initial value again.</p>"},{"location":"sequentials/textsequentials/sequential_changetextfontsize/#initial-plus-value","title":"Initial Plus Value","text":"<p>This adds Font Size to the target text's initial font size and modifies it to the calculated end value.</p>"},{"location":"sequentials/textsequentials/sequential_changetextfontsize/#initial-multiply-value","title":"Initial Multiply Value","text":"<p>This multiplies the text's initial font size with the Font Size and modifies the target text's font size to the calculated value.</p>"},{"location":"sequentials/textsequentials/sequential_changetextfontsize/#from-a-to-b","title":"From A to B","text":"<p>This lets you define the starting font size and end font size of the animation independent from the initial font size of the target text.</p>"},{"location":"sequentials/textsequentials/sequential_changetextfontsize/#font-size","title":"Font Size","text":"<p>This is the font size that determines the end font size in accordance with the End Value Type option as explained above.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/textsequentials/sequential_changetextfontsize/#from-value","title":"From Value","text":"<p>This is only available when the End Value Type is From A to B.</p> <p>This is the starting font size of the animation.</p>"},{"location":"sequentials/textsequentials/sequential_changetextoutlinecolor/","title":"Change Text Outline Color Sequential","text":"<p>This sequential changes the outline color of a TextMeshPro with animation.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be TextMeshPro type. So please make sure that the game object assigned in this field has a TextMeshPro component attached. Otherwise you'll see a runtime error log when this sequential plays.</p>"},{"location":"sequentials/textsequentials/sequential_changetextoutlinecolor/#color-change-type","title":"Color Change Type","text":"<p>This option determines the calculation of the end color.</p>"},{"location":"sequentials/textsequentials/sequential_changetextoutlinecolor/#initial-to-value","title":"Initial to Value","text":"<p>This changes the outline color of the target text from its initial value (the value before this sequential starts) to the Color value.</p>"},{"location":"sequentials/textsequentials/sequential_changetextoutlinecolor/#from-value-to-initial","title":"From Value to Initial","text":"<p>This instantly sets the outline color of the target text to the Color and then modifies it to its initial value again with animation.</p>"},{"location":"sequentials/textsequentials/sequential_changetextoutlinecolor/#initial-plus-value","title":"Initial Plus Value","text":"<p>This adds Color to the target text's initial outline color value and changes it to the calculated value.</p>"},{"location":"sequentials/textsequentials/sequential_changetextoutlinecolor/#initial-multiply-value","title":"Initial Multiply Value","text":"<p>This multiplies each component (R,G,B,A) of the text's initial outline color with the corresponding component of the Color and changes the target text outline color to the calculated color value.</p>"},{"location":"sequentials/textsequentials/sequential_changetextoutlinecolor/#from-a-to-b","title":"From A to B","text":"<p>This lets you define the starting outline color and end outline color of the animation independent from the initial outline color of the target text.</p>"},{"location":"sequentials/textsequentials/sequential_changetextoutlinecolor/#color","title":"Color","text":"<p>This is the Color value that determines the end outline color in accordance with the Color Change Type option as explained above.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/textsequentials/sequential_changetextoutlinecolor/#from-color","title":"From Color","text":"<p>This is only available when the Color Change Type is From A to B.</p> <p>This is the starting outline color value of the animation.</p>"},{"location":"sequentials/textsequentials/sequential_changetextoutlinewidth/","title":"Change Text Outline Width Sequential","text":"<p>This sequential will change the Outline Width property of a TextMeshPro component with animation.</p> <p>Warning</p> <p>Do not forget to enable the Outline option of the text's material!</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be TextMeshPro type. So please make sure that the game object assigned in this field has a TextMeshPro component attached. Otherwise you'll see a runtime error log when this sequential plays.</p>"},{"location":"sequentials/textsequentials/sequential_changetextoutlinewidth/#end-value-type","title":"End Value Type","text":"<p>This option determines the calculation of the end value of the outline width.</p>"},{"location":"sequentials/textsequentials/sequential_changetextoutlinewidth/#initial-to-value","title":"Initial to Value","text":"<p>This modifies the target text's outline width from its initial value (the value before this sequential starts) to the Outline Width.</p>"},{"location":"sequentials/textsequentials/sequential_changetextoutlinewidth/#from-value-to-initial","title":"From Value to Initial","text":"<p>This sets the target text's outline width to the Outline Width and then modifies it to its initial value again.</p>"},{"location":"sequentials/textsequentials/sequential_changetextoutlinewidth/#initial-plus-value","title":"Initial Plus Value","text":"<p>This adds Outline Width to the target text's initial outline width and modifies it to the calculated end value.</p>"},{"location":"sequentials/textsequentials/sequential_changetextoutlinewidth/#initial-multiply-value","title":"Initial Multiply Value","text":"<p>This multiplies the text's initial outline width with the Outline Width and modifies the target text's outline width to the calculated value.</p>"},{"location":"sequentials/textsequentials/sequential_changetextoutlinewidth/#from-a-to-b","title":"From A to B","text":"<p>This lets you define the starting outline width and end outline width of the animation independent from the initial outline width of the target text.</p>"},{"location":"sequentials/textsequentials/sequential_changetextoutlinewidth/#outline-width","title":"Outline Width","text":"<p>This is the outline width that determines the end outline width in accordance with the End Value Type option as explained above.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/textsequentials/sequential_changetextoutlinewidth/#from-outline-width","title":"From Outline Width","text":"<p>This is only available when the End Value Type is From A to B.</p> <p>This is the starting outline width of the animation.</p>"},{"location":"sequentials/textsequentials/sequential_changetextsoftness/","title":"Change Text Softness Sequential","text":"<p>This sequential will change the Softness property of a TextMeshPro component with animation.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be TextMeshPro type. So please make sure that the game object assigned in this field has a TextMeshPro component attached. Otherwise you'll see a runtime error log when this sequential plays.</p>"},{"location":"sequentials/textsequentials/sequential_changetextsoftness/#end-value-type","title":"End Value Type","text":"<p>This option determines the calculation of the end value of the softness.</p>"},{"location":"sequentials/textsequentials/sequential_changetextsoftness/#initial-to-value","title":"Initial to Value","text":"<p>This modifies the target text's softness from its initial value (the value before this sequential starts) to the Softness.</p>"},{"location":"sequentials/textsequentials/sequential_changetextsoftness/#from-value-to-initial","title":"From Value to Initial","text":"<p>This sets the target text's softness to the Softness and then modifies it to its initial value again.</p>"},{"location":"sequentials/textsequentials/sequential_changetextsoftness/#initial-plus-value","title":"Initial Plus Value","text":"<p>This adds Softness to the target text's initial softness and modifies it to the calculated end value.</p>"},{"location":"sequentials/textsequentials/sequential_changetextsoftness/#initial-multiply-value","title":"Initial Multiply Value","text":"<p>This multiplies the text's initial softness with the Softness and modifies the target text's softness to the calculated value.</p>"},{"location":"sequentials/textsequentials/sequential_changetextsoftness/#from-a-to-b","title":"From A to B","text":"<p>This lets you define the starting softness and end softness of the animation independent from the initial softness of the target text.</p>"},{"location":"sequentials/textsequentials/sequential_changetextsoftness/#softness","title":"Softness","text":"<p>This is the softness that determines the end softness in accordance with the End Value Type option as explained above.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/textsequentials/sequential_changetextsoftness/#from-softness","title":"From Softness","text":"<p>This is only available when the End Value Type is From A to B.</p> <p>This is the starting softness of the animation.</p>"},{"location":"sequentials/textsequentials/sequential_countnumberontext/","title":"Count Number on Text Sequential","text":"<p>Counts from a number to another number and sets the value to the TMP Text component's text.</p> <p>So basically, this is a counting animation.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be TextMeshPro type. So please make sure that the game object assigned in this field has a TextMeshPro component attached. Otherwise you'll see a runtime error log when this sequential plays.</p>"},{"location":"sequentials/textsequentials/sequential_countnumberontext/#end-value-type","title":"End Value Type","text":"<p>This option determines the calculation of the end value of the number.</p>"},{"location":"sequentials/textsequentials/sequential_countnumberontext/#initial-to-value","title":"Initial to Value","text":"<p>This gets the number from TMPText's text value then modifies the number from its initial value (the value before this sequential starts) to the End Value.</p>"},{"location":"sequentials/textsequentials/sequential_countnumberontext/#from-value-to-initial","title":"From Value to Initial","text":"<p>This sets the number to the End Value and then modifies it to its initial value again.</p>"},{"location":"sequentials/textsequentials/sequential_countnumberontext/#initial-plus-value","title":"Initial Plus Value","text":"<p>This gets the number from TMPText's text value then adds End Value to the initial number and modifies it to the calculated end value.</p>"},{"location":"sequentials/textsequentials/sequential_countnumberontext/#initial-multiply-value","title":"Initial Multiply Value","text":"<p>This gets the number from TMPText's text value then multiplies the initial number with the End Value and modifies the it to the calculated value.</p>"},{"location":"sequentials/textsequentials/sequential_countnumberontext/#from-a-to-b","title":"From A to B","text":"<p>This lets you define the starting number and end number of the count animation independent from the initial text of the TMPText component.</p>"},{"location":"sequentials/textsequentials/sequential_countnumberontext/#end-value","title":"End Value","text":"<p>This is the value that determines the end number in accordance with the End Value Type option as explained above.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/textsequentials/sequential_countnumberontext/#start-value","title":"Start Value","text":"<p>This is only available when the End Value Type is From A to B.</p> <p>This is the starting number value of the animation.</p>"},{"location":"sequentials/textsequentials/sequential_revealtext/","title":"Reveal Text Sequential","text":"<p>This sequential reveals a text of a TextMeshPro component with animation.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be TextMeshPro type. So please make sure that the game object assigned in this field has a TextMeshPro component attached. Otherwise you'll see a runtime error log when this sequential plays.</p>"},{"location":"sequentials/textsequentials/sequential_revealtext/#reveal-option","title":"Reveal Option","text":"<p>This defines how to reveal the text.</p> <ul> <li>Character by Character: This will reveal each character one by one.</li> <li>Word by Word: This will reveal each word one by one. Ignores multiple spaces between words.</li> <li>Line by Line: This will reveal each line one by one.</li> </ul>"},{"location":"sequentials/textsequentials/sequential_revealtext/#text","title":"Text","text":"<p>This is the text to reveal.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/textsequentials/sequential_revealtext/#rich-text","title":"Rich Text","text":"<p>If you enabled this option, it will parse the rich text tags (e.g. b, color) in the text and reveal the text accordingly.</p> <p>Otherwise, it will not parse rich text tags and display them as plain text.</p> <p>Most of the time, this should be enabled.</p>"},{"location":"sequentials/uianimationsequentials/","title":"UI ANIMATIONS","text":"<p>UI Animation Sequentials are very similar to normal Animation Sequentials but they're designed to work with UI elements. </p> <p>Info</p> <p>Please refer to the Animation Sequentials because most of the UI animations are very similar to the corresponding Animation Sequential.</p> <p>But there are some extra sequentials for UI elements which you can learn from this section.</p>"},{"location":"sequentials/uianimationsequentials/sequential_changeuioffset/","title":"Change UI Offset","text":"<p>This sequential changes the position of a UI element by modifying its offsetMin and offsetMax properties. </p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p>"},{"location":"sequentials/uianimationsequentials/sequential_changeuioffset/#offset-change-type","title":"Offset Change Type","text":"<p>This option determines the calculation of the end value of the offset.</p>"},{"location":"sequentials/uianimationsequentials/sequential_changeuioffset/#initial-to-value","title":"Initial to Value","text":"<p>This moves the target UI element from its initial value (the value before this sequential starts) to the Offset.</p>"},{"location":"sequentials/uianimationsequentials/sequential_changeuioffset/#from-value-to-initial","title":"From Value to Initial","text":"<p>This sets the position of target UI element by the Offset and then changes it to its initial value again.</p>"},{"location":"sequentials/uianimationsequentials/sequential_changeuioffset/#initial-plus-value","title":"Initial Plus Value","text":"<p>This adds Offset to the target UI element's initial position value and changes it to the calculated position.</p>"},{"location":"sequentials/uianimationsequentials/sequential_changeuioffset/#initial-multiply-value","title":"Initial Multiply Value","text":"<p>This multiplies the UI element's initial position (offset values) with the  Offset and changes the target UI element's offsets to the calculated value.</p>"},{"location":"sequentials/uianimationsequentials/sequential_changeuioffset/#from-a-to-b","title":"From A to B","text":"<p>This lets you define the starting position and end position of the Change UI Offset animation independent from the initial position of the target UI element.</p> <p></p>"},{"location":"sequentials/uianimationsequentials/sequential_changeuioffset/#offset","title":"Offset","text":"<p>This is the Left, Right, Top and Bottom positions that determines the end position in accordance with the Offset Change Type option as explained above.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/uianimationsequentials/sequential_changeuioffset/#from-offset","title":"From Offset","text":"<p>This is only available when the Offset Change Type is From A to B.</p> <p>This is the starting position of the Change UI Offset animation.</p>"},{"location":"sequentials/uianimationsequentials/sequential_changeuisize/","title":"Change UI Size","text":"<p>This sequential changes the size of a UI element by modifying its sizeDelta property. This is different from Scale Animation because it changes the scale but this changes the size while keeping the scale as it is.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p>"},{"location":"sequentials/uianimationsequentials/sequential_changeuisize/#size-change-type","title":"Size Change Type","text":"<p>This option determines the calculation of the end value of the size.</p>"},{"location":"sequentials/uianimationsequentials/sequential_changeuisize/#initial-to-value","title":"Initial to Value","text":"<p>This resizes the target UI element from its initial value (the value before this sequential starts) to the Size.</p>"},{"location":"sequentials/uianimationsequentials/sequential_changeuisize/#from-value-to-initial","title":"From Value to Initial","text":"<p>This sets the size of target UI element to the Size and then changes it to its initial value again.</p>"},{"location":"sequentials/uianimationsequentials/sequential_changeuisize/#initial-plus-value","title":"Initial Plus Value","text":"<p>This adds Size to the target UI element's initial sizeDelta value and changes it to the calculated sizeDelta value.</p>"},{"location":"sequentials/uianimationsequentials/sequential_changeuisize/#initial-multiply-value","title":"Initial Multiply Value","text":"<p>This multiplies the UI element's initial sizeDelta value with the  Size and changes the target UI element's sizeDelta to the calculated value.</p>"},{"location":"sequentials/uianimationsequentials/sequential_changeuisize/#from-a-to-b","title":"From A to B","text":"<p>This lets you define the starting size and end size of the Change UI Size animation independent from the initial size of the target UI element.</p> <p></p>"},{"location":"sequentials/uianimationsequentials/sequential_changeuisize/#size","title":"Size","text":"<p>This is the Width and Height value that determines the end size in accordance with the Size Change Type option as explained above.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/uianimationsequentials/sequential_changeuisize/#from-size","title":"From Size","text":"<p>This is only available when the Size Change Type is From A to B.</p> <p>This is the starting size of the Change UI Size animation.</p>"},{"location":"sequentials/uianimationsequentials/sequential_fadeui/","title":"Fade UI","text":"<p>This sequential lets you fade a UI element by modifying its Alpha value with animation.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p>"},{"location":"sequentials/uianimationsequentials/sequential_fadeui/#component-type","title":"Component Type","text":"<p>Which type of component do you want to fade?</p> <ul> <li>Image: If the gameobject you want to fade has the UI Image component, select this option.</li> <li>Canvas Group: If the gameobject you want to fade has the Canvas Group component, select this option.</li> <li>Text: If the gameobject you want to fade has the TMPText component, select this option.</li> </ul>"},{"location":"sequentials/uianimationsequentials/sequential_fadeui/#fade-change-type","title":"Fade Change Type","text":"<p>This option determines the calculation of the end value of the fade.</p>"},{"location":"sequentials/uianimationsequentials/sequential_fadeui/#initial-to-value","title":"Initial to Value","text":"<p>This fades the target transform from its initial value (the value before this sequential starts) to the Alpha Value.</p>"},{"location":"sequentials/uianimationsequentials/sequential_fadeui/#from-value-to-initial","title":"From Value to Initial","text":"<p>This sets the alpha of target transform to the Alpha Value and then changes it to its initial value again.</p>"},{"location":"sequentials/uianimationsequentials/sequential_fadeui/#initial-plus-value","title":"Initial Plus Value","text":"<p>This adds Alpha Value to the target transform's initial alpha value and changes it to the calculated alpha value.</p>"},{"location":"sequentials/uianimationsequentials/sequential_fadeui/#initial-multiply-value","title":"Initial Multiply Value","text":"<p>This multiplies the transform's initial alpha value with the  Alpha Value and changes the target transform's alpha to the calculated value.</p>"},{"location":"sequentials/uianimationsequentials/sequential_fadeui/#from-a-to-b","title":"From A to B","text":"<p>This lets you define the starting alpha and end alpha of the fade animation independent from the initial alpha of the target transform.</p> <p></p>"},{"location":"sequentials/uianimationsequentials/sequential_fadeui/#alpha-value","title":"Alpha Value","text":"<p>This is the value that determines the end transparency of the target gameobject in accordance with the Fade Change Type option as explained above.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/uianimationsequentials/sequential_fadeui/#from-alpha","title":"From Alpha","text":"<p>This is only available when the Fade Change Type is From A to B.</p> <p>This is the starting alpha value of the fade animation.</p>"},{"location":"sequentials/uianimationsequentials/sequential_filluiimage/","title":"Fill UI Image","text":"<p>This sequential lets you fill a UI image element by modifying its FillAmount value with animation.</p> <p>Warning</p> <p>The UI Image game object's Image Type property should be set to Filled to make this sequential work.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be Image (UI) type. So please make sure that the game object assigned in this field has an Image component attached. Otherwise you'll see a runtime error log when this sequential plays.</p>"},{"location":"sequentials/uianimationsequentials/sequential_filluiimage/#end-value-type","title":"End Value Type","text":"<p>This option determines the calculation of the end value of the fill amount.</p>"},{"location":"sequentials/uianimationsequentials/sequential_filluiimage/#initial-to-value","title":"Initial to Value","text":"<p>This fills the target image from its initial fill amount value (the value before this sequential starts) to the Fill Amount.</p>"},{"location":"sequentials/uianimationsequentials/sequential_filluiimage/#from-value-to-initial","title":"From Value to Initial","text":"<p>This sets the fill amount of target image to the Fill Amount and then changes it to its initial value again.</p>"},{"location":"sequentials/uianimationsequentials/sequential_filluiimage/#initial-plus-value","title":"Initial Plus Value","text":"<p>This adds Fill Amount to the target image's initial fill amount value and changes it to the calculated fill amount value.</p>"},{"location":"sequentials/uianimationsequentials/sequential_filluiimage/#initial-multiply-value","title":"Initial Multiply Value","text":"<p>This multiplies the image's initial fill amount value with the  Fill Amount and changes the target image's fill amount to the calculated value.</p>"},{"location":"sequentials/uianimationsequentials/sequential_filluiimage/#from-a-to-b","title":"From A to B","text":"<p>This lets you define the starting fill amount and end fill amount of the animation independent from the initial fill amount of the target image.</p>"},{"location":"sequentials/uianimationsequentials/sequential_filluiimage/#fill-amount","title":"Fill Amount","text":"<p>This is the value that determines the end fill amount of the target image in accordance with the End Value Type option as explained above.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/uianimationsequentials/sequential_filluiimage/#from-fill-amount","title":"From Fill Amount","text":"<p>This is only available when the End Value Type is From A to B.</p> <p>This is the starting fill amount value of the animation.</p>"},{"location":"sequentials/unityanimationsequentials/","title":"Unity Animation Sequentials","text":"<p>The sequentials in this category let you to control the animations via built-in Animator component.</p>"},{"location":"sequentials/unityanimationsequentials/sequential_crossfadeanimation/","title":"CrossFade Unity Animator Animation Sequential","text":"<p>This sequentials creates a crossfade from the current state to any other state using normalized times.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be Animator type. So please make sure that the game object assigned in this field has an Animator component attached. Otherwise you'll see a runtime error log when this sequential plays.</p>"},{"location":"sequentials/unityanimationsequentials/sequential_crossfadeanimation/#state-name","title":"State Name","text":"<p>State name to play.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/unityanimationsequentials/sequential_crossfadeanimation/#layer","title":"Layer","text":"<p>Layer index.</p>"},{"location":"sequentials/unityanimationsequentials/sequential_crossfadeanimation/#normalized-transition-duration","title":"Normalized Transition Duration","text":"<p>The duration of the transition. This is the normalized time.</p>"},{"location":"sequentials/unityanimationsequentials/sequential_playunityanimation/","title":"Play Unity Animator Animation Sequential","text":"<p>This sequentials plays a Unity animation state.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be Animator type. So please make sure that the game object assigned in this field has an Animator component attached. Otherwise you'll see a runtime error log when this sequential plays.</p>"},{"location":"sequentials/unityanimationsequentials/sequential_playunityanimation/#state-name","title":"State Name","text":"<p>State name to play.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/unityanimationsequentials/sequential_playunityanimation/#layer","title":"Layer","text":"<p>Layer index.</p>"},{"location":"sequentials/unityanimationsequentials/sequential_playunityanimation/#play-in-fixed-time","title":"Play in Fixed Time","text":"<p>If checked, it plays the animation in sync with FixedUpdate.</p>"},{"location":"sequentials/unityanimationsequentials/sequential_playunityanimation/#fixed-time","title":"Fixed Time","text":"<p>Time offset in seconds.</p> <p>This is only available if Play in Fixed Time is checked.</p>"},{"location":"sequentials/unityanimationsequentials/sequential_setanimatorparameter/","title":"Set Animator Parameter Sequential","text":"<p>This sequential lets you set a value to an animator parameter.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Animation Options</p> <p>This sequential derives from Animation Sequential and gets all of its properties. So, to learn about the __Animation Options please see Animation Base</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be Animator type. So please make sure that the game object assigned in this field has an Animator component attached. Otherwise you'll see a runtime error log when this sequential plays.</p>"},{"location":"sequentials/unityanimationsequentials/sequential_setanimatorparameter/#parameter-name","title":"Parameter Name","text":"<p>Parameter name to set.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/unityanimationsequentials/sequential_setanimatorparameter/#parameter-type","title":"Parameter Type","text":"<p>This is the data type of the parameter. This should match the type of the parameter in the Animator graph.</p>"},{"location":"sequentials/unityanimationsequentials/sequential_setanimatorparameter/#parameter-value","title":"Parameter Value","text":"<p>This is the value to assign to the parameter.</p> <p>This is a dynamic field and it changes according to the Parameter Type property.</p> <p>It's possible to assign different kind of values to this property (e.g. directly, randomly, from variable).</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentials/unityanimationsequentials/sequential_setanimatorparameter/#end-value-type","title":"End Value Type","text":"<p>This option determines the calculation of the end value of the parameter value.</p>"},{"location":"sequentials/unityanimationsequentials/sequential_setanimatorparameter/#initial-to-value","title":"Initial to Value","text":"<p>This changes the parameter from its initial value (the value before this sequential starts) to the Parameter Value.</p>"},{"location":"sequentials/unityanimationsequentials/sequential_setanimatorparameter/#from-value-to-initial","title":"From Value to Initial","text":"<p>This sets the value of parameter to the Parameter Value and then changes it to its initial value again.</p>"},{"location":"sequentials/unityanimationsequentials/sequential_setanimatorparameter/#initial-plus-value","title":"Initial Plus Value","text":"<p>This adds Parameter Value to the initial parameter value and changes it to the calculated  value.</p>"},{"location":"sequentials/unityanimationsequentials/sequential_setanimatorparameter/#initial-multiply-value","title":"Initial Multiply Value","text":"<p>This multiplies the parameter's initial value with the  Parameter Value and changes the to the calculated value.</p>"},{"location":"sequentials/unityanimationsequentials/sequential_setanimatorparameter/#from-a-to-b","title":"From A to B","text":"<p>This lets you define the starting value and end value of the animation independent from the initial value of the parameter.</p>"},{"location":"sequentials/unityanimationsequentials/sequential_stopanimation/","title":"Stop Unity Animator Animation Sequential","text":"<p>This sequentials stops a playing Unity Animator animation.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p> <p>Target Object</p> <p>Target Object (or Target Objects if Multiple Objects are returned) needs to be Animator type. So please make sure that the game object assigned in this field has an Animator component attached. Otherwise you'll see a runtime error log when this sequential plays.</p>"},{"location":"sequentials/variablesequentials/sequential_getvariable/","title":"Get Variable Sequential","text":"<p>This sequential finds a variable from the Parent Sequentior's Variables List and returns it as the Sequential Output port.</p> <p>Most of the time you won't need this sequential because sequential properties that a variable can be assigned to have it own variable assigning mechanism.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p>"},{"location":"sequentials/variablesequentials/sequential_getvariable/#variable-name","title":"Variable Name","text":"<p>The variable name to find in the Parent Sequentior's Variables List.</p> <p>Tip</p> <p>You can select a variable of parent Sequentior Manager by clicking the yellow arrow in this field. This is just for entering the variable name easily. You can always type any variable name to the field also.</p>"},{"location":"sequentials/variablesequentials/sequential_setgameobjvariable/","title":"Set GameObject Variable Sequential","text":"<p>This sequential sets the value of a variable to the game object retured from Seq Obj Input port.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p>"},{"location":"sequentials/variablesequentials/sequential_setgameobjvariable/#variable-name","title":"Variable Name","text":"<p>The variable name to set. </p> <p>Warning</p> <p>This variable name should exist in the Parent Sequentior's Variables List and its value type should be GameObject.</p>"},{"location":"sequentials/variablesequentials/sequential_setgameobjvariable/#variable-obj","title":"Variable Obj","text":"<p>This is the sequential that has the game object value to assign to the variable. This field will be automatically filled when you connect an Object Returner sequential to the Seq Obj Input Port</p>"},{"location":"sequentials/variablesequentials/sequential_setvariable/","title":"Set Variable Sequential","text":"<p>This sequential finds a variable from the Parent Sequentior's Variables List and sets its value from script.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p>"},{"location":"sequentials/variablesequentials/sequential_setvariable/#variable-name","title":"Variable Name","text":"<p>The variable name to set in the Parent Sequentior's Variables List. This variable should be defined in parent Sequentior.</p> <p>Tip</p> <p>You can select a variable of parent Sequentior Manager by clicking the yellow arrow in this field. This is just for entering the variable name easily. You can always type any variable name to the field also.</p>"},{"location":"sequentials/variablesequentials/sequential_setvariable/#target-gameobject","title":"Target GameObject","text":"<p>This is the gameobject that has the script that will be used to get the new value of variable.</p>"},{"location":"sequentials/variablesequentials/sequential_setvariable/#component-name","title":"Component Name","text":"<p>This is the class name with full namespace of a component that is attached to the target object.</p> <p>So, for example, to call a method of a SpriteRenderer component attached, you need to type UnityEngine.SpriteRenderer, UnityEngine.</p> <p>What's full type?</p> <ul> <li>For custom types, you can use the full class name with namespace. e.g. com.kerimkaynakcigames.MyGame.GameManager</li> <li>For built-in types, write the class name and then put a comma (,) and then assembly name. e.g. UnityEngine.SpriteRenderer, UnityEngine</li> </ul>"},{"location":"sequentials/variablesequentials/sequential_setvariable/#source","title":"Source","text":"<p>There are two types of sources to get the value from the target gameobject.</p> <ul> <li>Method : Calls a method from component script.</li> <li>Field : Gets a field value from component script.</li> </ul>"},{"location":"sequentials/variablesequentials/sequential_setvariable/#method-name","title":"Method Name","text":"<p>This is the name of the method to call from component script. This method should return the same data type as the sequentior variable we're going to set a value to.</p>"},{"location":"sequentials/variablesequentials/sequential_setvariable/#field-name","title":"Field Name","text":"<p>This is the name of the field to read from component script. This field should have the same data type as the sequentior variable we're going to set a value to.</p>"},{"location":"sequentials/variablesequentials/sequential_setvariabledirect/","title":"Set Variable Directly","text":"<p>This sequential finds a variable from the target Sequentior Manager's Variables List and sets its value directly.</p> <p>Base Properties</p> <p>To learn about the common Base Properties, please see Base Sequential</p> <p>Target Object Options</p> <p>This sequential derives from Object Returner Sequential and gets all its properties from that sequential. So, to learn about the Target Object Options please see Object Returner Sequential</p>"},{"location":"sequentials/variablesequentials/sequential_setvariabledirect/#variable","title":"Variable","text":"<p>The variable name to set in the target Sequentior Manager's Variables List. This variable should be defined in target Sequentior.</p> <p>Tip</p> <p>You can select a variable of parent Sequentior Manager by clicking the yellow arrow in this field. This is just for entering the variable name easily. You can always type any variable name to the field also.</p>"},{"location":"sequentials/variablesequentials/sequential_setvariabledirect/#var-type","title":"Var Type","text":"<p>The data type of the value to assign to the variable. </p> <p>Typically, this will be the same data type as the variable's data type defined in the target sequentior manager variable list.</p>"},{"location":"sequentials/variablesequentials/sequential_setvariabledirect/#value","title":"Value","text":"<p>This is the value to set as the new value of the Variable.</p> <p>This field changes dynamically by the Var Type option. </p>"},{"location":"sequentiormanager/","title":"Sequentior Manager","text":"<p>Sequentior Manager is the main component that is responsible for managing all the Sequentials to perform a task.</p> <p>Sequentials are kind of single task performing sequence nodes that can be connected to each other inside a Sequentior Manager Graph to perform more complicated jobs.</p> <p>You need to add a Sequentior Manager component to a GameObject to start adding sequentials.</p> <p></p> <p>As you see, there are some options to tweak Sequentior Manager.</p> <p>The most important one is the Open Editor button. But let's see the other options first.</p>"},{"location":"sequentiormanager/#id","title":"Id","text":"<p>Note</p> <p>Optional for most cases.</p> <p>For most of the cases Id stays empty. But when you create a Sequentior (e.g. for an animation) and you make this Sequentior a prefab, you can dynamically load this Sequentior at runtime and play the Sequentior. This is useful for using a single Sequentior in multiple objects.</p> <p> See Dynamic Sequentiors to learn how to create sequentior prefabs.</p> <p>When this kind of dynamic sequentior is needed, you need to define a unique Id.</p> <p>Another example a unique Id is needed when you need to get a specific Sequentior from your scripts. You can query the Sequentior component by its Id.</p>"},{"location":"sequentiormanager/#sequential-list","title":"SEQUENTIAL LIST","text":"<p>This is the list of sequentials this Sequentior Manager has. This list is automatically filled by Sequentior Graph Editor so do not add/remove sequentials to/from this list manually. But for some reason when you remove a sequential node from Graph Editor, if  the sequential remains in this list (as a Missing Component) you can remove it from the list manually.</p> <p>This property is made public for this specific purpose.</p> <p>Warning</p> <p>You should not remove the child sequential game objects of the Sequentior Manager manually! If you did so accidentally, you need to remove it from the Sequential List manually too.</p>"},{"location":"sequentiormanager/#start-options","title":"START OPTIONS","text":"<p>Properties in this section lets you tweak how to start (play) the sequentials in this Sequentior Manager.</p>"},{"location":"sequentiormanager/#auto-start","title":"Auto Start","text":"<p>If enabled, the Sequentior Manager starts playing all the sequentials automatically.</p> <p>You can always start sequentials from your scripts:</p> <pre><code>public void SomeMethod(){\n\n    Sequentior_GameOver.StartAllSequentials();\n\n}\n</code></pre>"},{"location":"sequentiormanager/#auto-start-option","title":"Auto Start Option","text":"<p>If Auto Start is enabled, you can choose when Sequentior Manager starts playing its sequentials. </p> <ul> <li>OnStart: Auto starts sequentials when the gameobject that has the Sequentior Manager component is started (when its' OnStart() method is called)</li> <li>OnEnabled: Auto starts sequentials when the gameobject that has the Sequentior Manager component is enabled. This is useful for re-playing sequentials when the gameobject is re-enabled after a disabling.  </li> </ul>"},{"location":"sequentiormanager/#init-on-awake","title":"Init On Awake","text":"<p>Note</p> <p>This should almost always be enabled.</p> <p>This initializes the sequentials by the flow in the Sequentior Graph Editor.</p> <p>For some situations (especially when an IF Sequential is used), the flow needs to be determined at runtime and some properties of some other dependent components might not be ready yet on Awake(). To overcome the issues of those kinds, you can try to disable this property.</p>"},{"location":"sequentiormanager/#re-play-options","title":"RE-PLAY OPTIONS","text":"<p>Depending on your task's logic, you can try to play sequentials again even though they are not completed yet. For example; if you create a Sequentior for a player to create some fancy VFX and play some SFX when got damage, you always call the StartAllSequentials() method whenever something hit the player. But you might want to stop the previously playing effects and after that play the new effects, or you might want to play the effects again regardless of the previous ones. This section lets you decide how to play the sequentials again.</p> <p>Tip</p> <p>Re-Play Options are only effective when you start sequentials from scripts by calling StartAllSequentials() method. Auto Start and repeating ignores re-play options.</p>"},{"location":"sequentiormanager/#replay-option","title":"Replay Option","text":"<ul> <li>Don't Replay If Running : This is the default one. Sequentior Manager won't start the sequentials if the previously started sequentials not completed yet.</li> <li>Multiple Run : It will start the sequentials again whether or not a previous sequential session is completed.</li> <li>Stop Current and Run : It stops the currently running sequential session and restarts them all.</li> <li>Run Only Once : This prevents the Sequentior Manager to play for the second time. In other words, this basically lets the Sequentior Manager play only once. But you can reset it by calling the Reset() method and it can play once again.</li> </ul>"},{"location":"sequentiormanager/#cooldown-duration","title":"Cooldown Duration","text":"<p>Sometimes you might need a cooldown duration between multiple runs of the same sequentials even though you try to start sequentials from your scripts. This property sets a cooldown duration (in seconds) and it ignores the next StartAllSequentials() call if enough time is not elapsed yet between to replays.</p>"},{"location":"sequentiormanager/#repeat-options","title":"REPEAT OPTIONS","text":"<p>You can use those options to repeat the same sequentials after they completes.</p> <p>Warning</p> <p>Repeating is not affected by Re-Play options.</p>"},{"location":"sequentiormanager/#repeat","title":"Repeat","text":"<p>How many times to repeat the same Sequentior.</p> <p>Note</p> <p>To repeat forever set it to -1</p>"},{"location":"sequentiormanager/#delay-between-repeats","title":"Delay Between Repeats","text":"<p>How many seconds to wait between repeats. </p>"},{"location":"sequentiormanager/#after-complete","title":"AFTER COMPLETE","text":"<p>Let's you decide what to do after all the sequentials in this Sequentior Manager completed.</p>"},{"location":"sequentiormanager/#after-complete_1","title":"After Complete","text":"<ul> <li>Do Nothing: Does nothing after sequentior completes all of its sequential actions.</li> <li>Destroy Gameobject: Destroys the gameobject that contains this Sequentior Manager component.</li> <li>Disable Gameobject: Disables the gameobject that contains this Seqentior Manager component.</li> <li>Destroy Another Gameobject: Sometimes you create the Sequentior Manager in another gameobject or in a child gameobject other than the target gameobject but you need to destroy the target gameobject. In this kind of situations you can select this option to destroy any other gameobject.</li> <li>Disable Another Gameobject: Sometimes you create the Sequentior Manager in another gameobject or in a child gameobject other than the target gameobject but you need to disable the target gameobject. In this kind of situations you can select this option to disable any other gameobject.</li> </ul>"},{"location":"sequentiormanager/#oncomplete-event","title":"OnComplete Event","text":"<p>This is a UnityEvent that can be triggered after all the sequentials in this Sequentior Manager completed. So you can call methods in your scripts when sequentials completes.</p>"},{"location":"sequentiormanager/#misc","title":"MISC","text":""},{"location":"sequentiormanager/#stop-on-destroy","title":"Stop On Destroy","text":"<p>This will stop all the playing sequentials of this SequentiorManager when this SequentiorManager is destroyed. This is the default behaviour but you might want to continue (especially repeated) animations even though the parent SequentiorManager is destroyed.</p>"},{"location":"sequentiormanager/#stop-on-disable","title":"Stop On Disable","text":"<p>This will stop all the playing sequentials of this SequentiorManager when this SequentiorManager is disabled. This is the default behaviour but you might want to continue (especially repeated) animations even though the parent SequentiorManager is disabled.</p>"},{"location":"sequentiormanager/#variables","title":"VARIABLES","text":"<p>You can add variables to this list that will be used in the sequentials in this Sequentior Manager.</p> <p>Note</p> <p>Variables are explained in detail in Variables Section. Please refer to this section.</p>"},{"location":"sequentiormanager/#open-editor-button","title":"OPEN EDITOR BUTTON","text":"<p>Sequentior Graph Editor is the main editor to create sequential flows for your sequence of actions.</p> <p>Click this button to open the Sequentior Graph Editor and a new window will be opened.</p>"},{"location":"sequentiormanager/#other-editor-actions","title":"OTHER EDITOR ACTIONS","text":"<p>There are some buttons in this section to perform some actions on this Sequentior Manager. Some of them works at runtime, some of them works in editor.</p> <ul> <li>Play All: Sometimes you want to test the sequentials at runtime without writing a code to start it. You can start the sequentials by clicking this button at runtime.</li> <li>Stop All: This will stop the running sequentials at runtime.</li> <li>Pause All: This will pause the running sequentials at runtime.</li> <li>Resume All: This will resume the paused sequentials at runtime.</li> <li>Remove All Sequentials: This will remove all the sequentials created in this Sequentior Manager. This action cannot be undone, so use it cautiously.</li> </ul>"},{"location":"sequentiormanager/sequentiorgrapheditor/","title":"Sequentior Graph Editor","text":"<p>Sequentior Graph Editor is the main window that is used to create sequential flows.  Here you can add as many sequential nodes as you want to create your final flow of sequentials.</p> <p>Note</p> <p>Every Sequentior Graph Editor needs to have one and only one Start Node and it's added automatically when you open the Sequentior Graph Editor for the first time even though it's deleted manually.</p>"},{"location":"sequentiormanager/sequentiorgrapheditor/#add-new-sequential-node","title":"Add New Sequential Node","text":"<p>To add a new sequential node to the graph, just right click an empty area with your mouse or click the Add Sequential button and a popup will appear.</p> <p>Tip</p> <p>You can also use the Shift+A shortcut to open the Create Sequential window.</p> <p></p> <p>Here select the Create Node menu item and a new window appears.</p> <p></p> <p>In this window, you can browse all the sequential nodes that can be added to the graph and they are all categorized and they have short descriptions.</p> <p>Also, you can search for a sequential node by typing to the textbox on top of this window.</p> <p>Tip</p> <p>You can search by keywords of the sequentials as well as titles. For example when you search for \"delete\" it will also display \"Destroy\" sequential in the list.</p> <p>Now click Debug and all the sequentials in Debug category will appear. There is only Log sequential in Debug category.  Select it.</p> <p></p> <p>That's it! You've added a new sequential node to the graph.</p> <p></p> <p>Note</p> <p>If you look at the gameobject now, you see that it has 2 child gameobjects with related sequential component added. Also you can see that the Sequential list of the Sequentior Manager component is filled with those gameobjects too.</p>"},{"location":"sequentiormanager/sequentiorgrapheditor/#connect-sequentials","title":"Connect Sequentials","text":"<p>You've added the Log sequential node but currently that won't do anything because it's not connected yet to any other sequential node.</p> <p>The entry point of the Sequentior Graph Editor is Start Sequential and you need to connect the first sequential node to the Start Sequential.</p> <p>But how to connect sequential nodes?</p> <p>Every sequential nodes have two common pins. One is NEXT pin and the other is IN pin.</p> <p>Note</p> <p>Start Sequential node does not have an IN pin because it's the entry node and no other node can connect to it's IN pin.</p> <p>So, NEXT pin will be connected to the next sequence (sequential node) IN pin so the Sequentior Manager knows which sequential node to be started next.</p> <p>Now, click and hold the left mouse button on the NEXT pin of the Start Sequential and drag it to the IN pin of the Log sequential.</p> <p></p> <p>That's it! Now it's connected and Seqentior Manager knows which sequential to start next after the Start Sequential.</p> <p>Summary</p> <p>So, whenever you add a new sequential node, connect another node's NEXT pin to this newly added sequential's IN pin and it's ready to play.</p>"},{"location":"sequentiormanager/sequentiorgrapheditor/#disconnect","title":"Disconnect","text":"<p>The best part of the Graph Editor is that you can reshape the whole flow by disconnecting existing ones and reconnect them to another nodes.</p> <p>To disconnect, righ click the connection wire (edge) and choose Delete.</p>"},{"location":"sequentiormanager/sequentiorgrapheditor/#navigating-graph-editor","title":"Navigating Graph Editor","text":""},{"location":"sequentiormanager/sequentiorgrapheditor/#zoom","title":"Zoom","text":"<p>You can zoom in and out the graph editor by using scroll wheel of your mouse.</p>"},{"location":"sequentiormanager/sequentiorgrapheditor/#panning","title":"Panning","text":"<p>You can pan the graph by clicking and holding the middle button (scroll wheel button) of your mouse and drag mouse in any direction.</p>"},{"location":"sequentiormanager/sequentiorgrapheditor/#remove-a-sequential","title":"Remove a Sequential","text":"<p>You can right click on a sequential node and choose Delete </p> <p>Warning</p> <p>Do not delete the auto generated sequential child gameobjects manually from Hierarchy! This will break the Sequentior Graph Editor. If you somehow deleted a child gameobject manually then you need to remove the item in the Sequential list of the Sequentior Manager component too, then the graph editor works again as expected.</p>"},{"location":"sequentiormanager/sequentiorgrapheditor/#test-your-first-sequentior","title":"Test your first Sequentior","text":"<p>Now, just enter a text to the Log property of the Log Sequential and then enter Play mode in your game.</p> <p>If everything works as expected, you'll see the log text in Console.</p>"},{"location":"sequentiormanager/sequentiorgrapheditor/#collapse-all-and-expand-all","title":"Collapse All and Expand All","text":"<p>When you have lots of sequential nodes on the graph, this might affect the performance of editor and it might slow down. In these cases, you can collapse all the nodes by clicking the Collapse All button. This way, because Unity won't draw all the sequential node properties, it will speed up again. You can work on a single or a few nodes at a time while the others are collapsed.</p> <p>Expand All button expands all the nodes again.</p>"},{"location":"sequentiorsnippets/","title":"Sequentior Snippets","text":"<p>Sequentior Snippets are ready to use sequentior prefabs that can be used in another sequentior manager graphs.</p> <p>Think snippets as sequentials for common operations. </p> <p>Although I'm adding some built-in sequentior snippets to the package, you can also create your custom snippets very easily.</p> <p>For example, if you created an image reveal animation that can be used in several places (Sequentior graphs), then you can define this animation as a sequentior snippet with adjustable inputs.</p> <p>Please read other sub sections of this page to get the idea of using snippets.</p>"},{"location":"sequentiorsnippets/createsequentiorsnippet/","title":"Creating Custom Sequentior Snippets","text":"<p>Creating a sequentior snippet is just adding a Sequentior Manager component to a gameobject and then creating your flow with adding sequentials to this sequentior manager and then making this gameobject a prefab.</p> <p>That's it!</p> <p>But for making snippets more flexible and dynamic, you need to set the important properties by variables instead of setting them directly. e.g. if you created an animation inside this sequentior snippet, this animation needs a duration because all Animation Sequentials plays for a duration. So instead of setting a constant duration to the sequentials inside this snippet, define a variable to the sequentior manager and then get the duration property from this variable. </p> <p>Tip</p> <p>To make the variable of a sequentior snippet modifiable from another sequentior, set its Expose property to true. See Variables for more information.</p>"},{"location":"sequentiorsnippets/playsequentiorsnippet/","title":"Play Sequentior Snippet","text":"<p>There are two ways of playing a sequentior snippet.</p>"},{"location":"sequentiorsnippets/playsequentiorsnippet/#searching-or-selecting-from-list","title":"Searching or Selecting from list","text":"<p>If you're searching for a built-in sequentior snippet, use the Create Sequential window and search for its name or keywords.</p> <p>Note</p> <p>To learn how to add your custom sequentior snippets to the Create Sequential search list, please refer to this</p>"},{"location":"sequentiorsnippets/playsequentiorsnippet/#adding-play-sequentior-snippet-sequential","title":"Adding Play Sequentior Snippet Sequential","text":"<p>To play your custom sequentior snippets (that are not added to the Create Sequential Search List), you need to add a Play Sequentior Snippet sequential to the graph.</p>"},{"location":"sequentiorsnippets/playsequentiorsnippet/#sequentior-snippet","title":"Sequentior Snippet","text":"<p>The only thing you need to do is to assign you custom snippet prefab to the Sequentior Snippet property.</p>"},{"location":"sequentiorsnippets/playsequentiorsnippet/#inputs","title":"Inputs","text":"<p>After assigning a custom snippet, this list will be created automatically with the Exposed variables of the custom sequentior snippet prefab's SequentiorManager.</p> <p>Here, you can set the values of each input.</p> <p>Info</p> <p>To learn more about assigning values with different options, see Value Assign</p>"},{"location":"sequentiorsnippets/playsequentiorsnippet/#input-ports","title":"Input Ports","text":"<p>When you add a built-in sequentior snippet to the graph or when you assign a new prefab to the Sequentior Snippet property of Play Sequentior Snippet Sequential, input ports for all exposed variables (inputs) will be created automatically and you can connect another sequential's related output ports to these input ports to set their value.</p>"},{"location":"sequentiorsnippets/sequentiorsnippetlist/","title":"Adding Custom Sequentior Snippet to the Search List","text":"<p>As you see in Playing Sequentior Snippet page, you can play your custom sequentior snippets by using Play Sequentior Snippet Sequential and then assigning the related prefab to it.</p> <p>But the more convenient way of adding your custom snippets is selecting them directly from Create Sequential search window in a graph which is available for built-in snippets by default.</p> <p>So to add your custom sequentior snippets to the search list go to the SequentiorSnippets\\Data from Project view and select the Sequentior Snippets Custom asset file and add your custom snippet to the Snippets list in the inspector. </p> <p>Tip</p> <p>Search window searches the sequentials by their names and keywords.</p> <p>Tip</p> <p>If you can't find Sequentior Snippets Custom file in this directory, you can create a new one by right clicking on that directory and choose Create-&gt; Sequentior -&gt; Snippet Manager and name it Sequentior Snippets Custom.</p>"},{"location":"variables/","title":"Sequentior Variables","text":"<p>Variables make the Sequentials more dynamic because you can assign variables to the properties of sequentials instead of assigning direct values.</p> <p>Moreover, you can modify property values of sequentials via modifying variables from your scripts.</p> <p>There are two kind of variables in Sequentior:</p> <ul> <li> <p>Local Variables : These are variables local to a Sequentior Manager.</p> </li> <li> <p>Global Variables : These are variables that can be defined once and retrieved by all sequentials in the project.</p> </li> </ul>"},{"location":"variables/globalvariables/","title":"Global Variables","text":"<p>Unlike local variables which are only accessible from the sequentials of the Sequentior Manager defined on, global variables are accessible by each sequential in the whole project because these are Scriptable Objects.</p> <p>By using global variables, you define a variable and its value once and use the same value in many different sequentials. This way, if you change the variable value, all the sequentials will have the same modified value. So it makes your sequentials more managable.</p> <p>For example, you can define a global variable for duration of a popup show animation and use this value for every animation sequential that opens a popup. Or you can define a global color variable and use this color variable in every Color Change Sequential that changes a UI Image component.</p>"},{"location":"variables/globalvariables/#how-to-define-global-variable","title":"How to define global variable?","text":"<p>To create a new global variable, right click on the Project view then Create -&gt; Sequentior -&gt; Global Variable.</p> <p></p> <p>Tip</p> <p>To learn more about how to use global variables in sequentials, please refer to Value Assign section.</p>"},{"location":"variables/globalvariables/#variable-name","title":"Variable Name","text":"<p>This name that defines the variable.</p>"},{"location":"variables/globalvariables/#var-type","title":"Var Type","text":"<p>This is the data type of the variable.</p>"},{"location":"variables/globalvariables/#is-array","title":"Is Array","text":"<p>If you want to define the variable as an array, enable this option.</p>"},{"location":"variables/globalvariables/#variable-values","title":"Variable Values","text":"<p>This is the default/initial value of the variable.</p> <p>This field is dynamic and changes in accordance with Var Type and Is Array properties.</p>"},{"location":"variables/variables/","title":"Local Variables","text":"<p>These are variables local to a Sequentior Manager. This means only the sequentials that's created in this Sequentior Manager can reach these variables.</p>"},{"location":"variables/variables/#how-to-define-variables","title":"How to define variables?","text":"<p>You can add variables to the Sequentior Manager component's Variables list.</p> <p></p> <p>Tip</p> <p>To learn more about how to use variables in sequentials, please refer to Value Assign section.</p>"},{"location":"variables/variables/#variable-name","title":"Variable Name","text":"<p>This variable name should be unique in the same Sequentior Manager.</p>"},{"location":"variables/variables/#var-type","title":"Var Type","text":"<p>This is the data type of the variable.</p>"},{"location":"variables/variables/#is-array","title":"Is Array","text":"<p>If you want to define the variable as an array, enable this option.</p>"},{"location":"variables/variables/#variable-values","title":"Variable Values","text":"<p>This is the default/initial value of the variable.</p> <p>This field is dynamic and changes in accordance with Var Type and Is Array properties.</p>"}]}